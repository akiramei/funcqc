
📊 Dead Code Analysis Summary

Total functions:      1755
Entry points:         593
Reachable functions:  601 (34.2%)
Unreachable functions: 1154 (65.8%)
Dead code found:      1154 functions
Unused exports:       1063 functions

🚫 Dead Code Details

src/analyzers/call-graph-analyzer.ts
  🚫 constructor (50-63, 14 lines)
  🚫 analyzeFile (68-111, 44 lines)
  🔗 extractCallsFromFunction (116-146, 31 lines)
  🚫 analyzeCallExpression (151-218, 68 lines)
  🔗 analyzePropertyAccess (223-251, 29 lines)
  🚫 getCallContext (256-283, 28 lines)
  🔗 isExternalFunction (288-303, 16 lines)
  🔗 createDetectedCall (308-326, 19 lines)
  🔗 createCallEdge (331-389, 59 lines)
  🔗 getAllFunctionNodes (394-404, 11 lines)
  🔗 isFunctionDeclaration (409-415, 7 lines)
  🚫 getCacheStats (420-422, 3 lines)
  🔗 clearCache (427-429, 3 lines)

src/analyzers/dependency-metrics.ts
  🚫 calculateMetrics (51-113, 63 lines)
  🚫 generateStats (118-154, 37 lines)
  🔗 buildCallGraphs (159-186, 28 lines)
  🔗 preAggregateCallCounts (191-211, 21 lines)
  🔗 calculateMaxCallChainMemoized (216-235, 20 lines)
  🔗 calculateMaxCallChainRecursive (240-266, 27 lines)
  🔗 calculateCycleLength (271-307, 37 lines)
  🔗 isRecursiveFunction (312-343, 32 lines)
  🔗 calculateDepthFromEntries (348-376, 29 lines)

src/analyzers/entry-point-detector.ts
  🚫 detectEntryPoints (47-63, 17 lines)
  🔗 getEntryPointReasons (68-106, 39 lines)
  🔗 isTestFile (111-113, 3 lines)
  🔗 isCliFile (118-120, 3 lines)
  🔗 isMainFile (125-127, 3 lines)
  🚫 detectAdvancedEntryPoints (140-207, 68 lines)
  🚫 extractFunctionId (212-240, 29 lines)

src/analyzers/naming-quality-analyzer.ts
  🚫 analyze (160-191, 32 lines)
  🔗 parseToAST (196-219, 24 lines)
  🔗 createParseableSource (224-238, 15 lines)
  🔗 checkBasicNamingRules (247-313, 67 lines)
  🔗 checkSemanticAppropriateness (321-388, 68 lines)
  🔗 checkConsistency (394-443, 50 lines)
  🔗 checkRedundancy (450-487, 38 lines)
  🔗 getReturnTypeFromAST (492-513, 22 lines)
  🔗 calculateConfidence (518-544, 27 lines)
  🔗 isCamelCase (550-553, 4 lines)
  🔗 toCamelCase (555-559, 5 lines)
  🔗 hasGenericSuffixes (561-564, 4 lines)
  🔗 startsWithActionVerb (566-569, 4 lines)
  🔗 hasValidBooleanPrefix (571-574, 4 lines)
  🔗 extractFirstWord (576-580, 5 lines)
  🔗 isReturnTypeBoolean (582-586, 5 lines)
  🔗 isValidConstructorName (588-590, 3 lines)
  🔗 hasGoodVerbNounBalance (592-601, 10 lines)
  🔗 splitCamelCase (603-610, 8 lines)
  🔗 suggestActionVerbs (612-619, 8 lines)
  🔗 suggestBooleanNames (621-628, 8 lines)
  🔗 extractVerbPatterns (630-639, 10 lines)
  🔗 followsVerbPattern (641-644, 4 lines)
  🔗 extractNamingConventions (646-654, 9 lines)
  🔗 followsConventions (656-664, 9 lines)
  🔗 hasRedundantClassPrefix (666-670, 5 lines)
  🔗 removeClassPrefix (672-678, 7 lines)
  🔗 extractFilename (680-684, 5 lines)
  🔗 hasRedundantFilePrefix (686-690, 5 lines)
  🔗 removeFilePrefix (692-699, 8 lines)

src/analyzers/reachability-analyzer.ts
  🚫 analyzeReachability (29-76, 48 lines)
  🔗 getDeadCodeInfo (81-145, 65 lines)
  🔗 buildCallGraph (150-165, 16 lines)
  🔗 buildReverseCallGraph (170-183, 14 lines)
  🔗 traverse (188-205, 18 lines)
  🔗 isTestFunction (210-223, 14 lines)
  🔗 isOnlyCalledFromTests (228-242, 15 lines)
  🚫 findCircularDependencies (247-293, 47 lines)

src/analyzers/type-safety-analyzer.ts
  🚫 analyze (49-80, 32 lines)
  🔗 checkAnyTypeUsage (86-139, 54 lines)
  🔗 checkTypeAnnotationCompleteness (145-213, 69 lines)
  🔗 checkTypeSpecificity (219-276, 58 lines)
  🔗 checkReturnTypeExplicitness (282-325, 44 lines)
  🔗 calculateMetrics (330-342, 13 lines)
  🔗 isAnyType (348-353, 6 lines)
  🔗 isGenericType (355-369, 15 lines)
  🔗 findUnsafeTypes (371-393, 23 lines)
  🔗 looksLikeVoidFunction (395-409, 15 lines)
  🔗 isComplexFunction (411-417, 7 lines)
  🔗 isImplicitReturnType (422-435, 14 lines)
  🔗 hasImplicitReturnTypeFromAST (440-473, 34 lines)
  🔗 countAnyTypes (475-489, 15 lines)
  🔗 countUntypedParameters (491-495, 5 lines)
  🔗 usesGenericObjectTypes (497-508, 12 lines)
  🚫 analyzeBatch (513-564, 52 lines)
  🔗 parseToAST (569-617, 49 lines)
  🔗 createParseableSource (622-638, 17 lines)

src/analyzers/typescript-analyzer.ts
  🚫 constructor (45-77, 33 lines)
  🔗 analyzeFile (82-178, 97 lines)
  🚫 analyzeFilesBatch (183-215, 33 lines)
  🚫 analyzeFilesStream (221-248, 28 lines)
  🚫 extractFunctionInfo (250-324, 75 lines)
  🚫 extractMethodInfo (326-414, 89 lines)
  🚫 extractConstructorInfo (416-497, 82 lines)
  🚫 extractFunctionNodeFromVariable (502-509, 8 lines)
  🚫 extractFunctionMetadata (514-547, 34 lines)
  🚫 createVariableFunctionInfo (552-608, 57 lines)
  🔗 extractVariableFunctions (610-635, 26 lines)
  🔗 getFunctionSignature (637-647, 11 lines)
  🔗 getMethodSignature (649-660, 12 lines)
  🔗 getArrowFunctionSignature (662-674, 13 lines)
  🔗 getConstructorSignature (676-684, 9 lines)
  🔗 extractParameters (690-715, 26 lines)
  🔗 extractFunctionParameters (717-719, 3 lines)
  🔗 extractMethodParameters (721-723, 3 lines)
  🔗 extractArrowFunctionParameters (725-729, 5 lines)
  🔗 extractFunctionReturnType (731-748, 18 lines)
  🔗 extractMethodReturnType (750-767, 18 lines)
  🔗 extractArrowFunctionReturnType (769-788, 20 lines)
  🔗 extractConstructorParameters (790-792, 3 lines)
  🔗 simplifyType (794-802, 9 lines)
  🔗 extractPromiseType (804-807, 4 lines)
  🔗 calculateFileHash (809-811, 3 lines)
  🔗 calculateASTHash (813-821, 9 lines)
  🔗 calculateSignatureHash (823-825, 3 lines)
  🔗 generatePhysicalId (830-832, 3 lines)
  🔗 generateSemanticId (838-855, 18 lines)
  🔗 generateContentId (861-865, 5 lines)
  🔗 extractContextPath (870-893, 24 lines)
  🔗 extractModifiers (898-929, 32 lines)
  🔗 determineFunctionType (934-960, 27 lines)
  🔗 calculateNestingLevel (965-985, 21 lines)
  🔗 extractConstructorContextPath (990-1001, 12 lines)
  🔗 calculateConstructorNestingLevel (1006-1009, 4 lines)
  🔗 manageMemory (1014-1023, 10 lines)
  🔗 cleanup (1028-1036, 9 lines)
  🚫 getMemoryStats (1041-1046, 6 lines)
  🔗 getCacheStats (1051-1053, 3 lines)
  🚫 analyzeFileWithCallGraph (1059-1096, 38 lines)
  🚫 analyzeFilesBatchWithCallGraph (1101-1132, 32 lines)
  🚫 getCallGraphStats (1137-1139, 3 lines)
  🚫 clearCallGraphCache (1144-1146, 3 lines)

src/config/preset-manager.ts
  🚫 constructor (25-28, 4 lines)
  🚫 applyPreset (33-101, 69 lines)
  🔗 getPreset (106-116, 11 lines)
  🚫 listAllPresets (121-124, 4 lines)
  🚫 saveCustomPreset (129-146, 18 lines)
  🚫 deleteCustomPreset (151-161, 11 lines)
  🚫 compareWithPreset (166-174, 9 lines)
  🚫 suggestPresets (179-196, 18 lines)
  🔗 loadCustomPresets (202-209, 8 lines)
  🔗 saveCustomPresets (211-215, 5 lines)
  🔗 createConfigBackup (217-226, 10 lines)
  🔗 calculateChanges (228-245, 18 lines)
  🔗 compareConfigObjects (247-286, 40 lines)
  🔗 assessChangeImpact (288-309, 22 lines)
  🔗 describeChange (311-321, 11 lines)
  🔗 validateConfiguration (323-368, 46 lines)
  🔗 mergeConfigurations (370-384, 15 lines)
  🔗 deepMerge (386-407, 22 lines)
  🔗 saveConfiguration (409-415, 7 lines)
  🔗 analyzeProjectStructure (417-514, 98 lines)
  🔗 calculatePresetScore (516-551, 36 lines)

src/config/presets.ts
  🚫 getPreset (502-504, 3 lines)
  🚫 getPresetsByCategory (509-511, 3 lines)
  🚫 getPresetsByContext (516-523, 8 lines)
  🚫 listPresets (528-540, 13 lines)

src/config/refactoring-thresholds.ts
  🔗 loadThresholds (79-114, 36 lines)
  🔗 validateAndMergeThresholds (119-187, 69 lines)
  🚫 getComplexityReductionThreshold (192-195, 4 lines)
  🚫 getFunctionExplosionThreshold (200-208, 9 lines)
  🚫 getMaintainabilityImprovementThreshold (213-216, 4 lines)
  🚫 getRiskImprovementThreshold (221-224, 4 lines)
  🚫 clearCache (229-232, 4 lines)

src/config/thresholds-simple.ts
  🚫 constructor (42-44, 3 lines)
  🚫 getQualityThresholds (49-51, 3 lines)
  🚫 updateThresholds (56-59, 4 lines)
  🔗 validateThresholds (64-88, 25 lines)
  🔗 mergeWithDefaults (93-109, 17 lines)
  🚫 parseQualityThresholdConfig (115-136, 22 lines)
  🔗 parseNumberField (141-147, 7 lines)
  🔗 parseThresholdSection (152-173, 22 lines)
  🔗 parseQualityThresholds (175-223, 49 lines)

src/core/analyzer.ts
  🚫 constructor (9-14, 6 lines)
  🔗 analyzeFile (19-78, 60 lines)
  🚫 analyzeFiles (83-105, 23 lines)
  🔗 getAnalyzerForFile (110-127, 18 lines)
  🚫 isFileSupported (132-134, 3 lines)
  🚫 getSupportedExtensions (139-141, 3 lines)
  🚫 validateFunction (146-203, 58 lines)
  🚫 generateFunctionId (208-219, 12 lines)
  🔗 simpleHash (221-229, 9 lines)
  🚫 compareFunctions (234-275, 42 lines)

src/core/config.ts
  🔗 load (57-75, 19 lines)
  🚫 getDefaults (77-79, 3 lines)
  🚫 loadLightweight (85-107, 23 lines)
  🔗 validateAndMergeConfig (109-123, 15 lines)
  🔗 mergeArrayConfigs (125-141, 17 lines)
  🔗 mergeStorageConfig (143-157, 15 lines)
  🔗 mergeMetricsConfig (159-190, 32 lines)
  🔗 mergeGitConfig (192-202, 11 lines)
  🔗 mergeSimilarityConfig (204-212, 9 lines)
  🔗 resolvePath (217-226, 10 lines)
  🚫 getConfigPath (231-234, 4 lines)
  🔗 getThresholdManager (239-244, 6 lines)
  🔗 getQualityThresholds (249-251, 3 lines)
  🔗 updateQualityThresholds (256-269, 14 lines)
  🔗 clearCache (274-279, 6 lines)
  🔗 generateScanConfigHash (285-294, 10 lines)
  🚫 getCurrentScanConfigHash (299-302, 4 lines)
  🔗 mergeThresholdsConfig (304-308, 5 lines)
  🔗 mergeAssessmentConfig (310-314, 5 lines)
  🔗 mergeProjectContextConfig (316-320, 5 lines)
  🔗 mergeFuncqcThresholdsConfig (322-336, 15 lines)
  🔗 validateThresholds (338-368, 31 lines)
  🔗 validateMultiLevelThreshold (370-380, 11 lines)
  🚫 validateThresholdValue (382-416, 35 lines)
  🔗 validateAssessmentConfig (418-454, 37 lines)
  🔗 validateProjectContext (456-489, 34 lines)

src/core/environment.ts
  🚫 createAppEnvironment (10-40, 31 lines)
  🚫 createCommandEnvironment (46-59, 14 lines)
  🚫 destroyAppEnvironment (64-66, 3 lines)

src/core/realtime-quality-gate.ts
  🚫 constructor (115-138, 24 lines)
  🚫 evaluateCode (147-189, 43 lines)
  🚫 updateBaseline (196-211, 16 lines)
  🚫 evaluateAllFunctions (220-304, 85 lines)
  🔗 getBaseline (309-314, 6 lines)
  🔗 generateImprovementInstruction (322-365, 44 lines)
  🔗 calculateQualityScore (370-384, 15 lines)
  🔗 performAnalysis (389-469, 81 lines)
  🔗 detectViolations (474-485, 12 lines)
  🔗 detectAdaptiveViolations (490-521, 32 lines)
  🔗 detectStaticViolations (526-556, 31 lines)
  🔗 generateMetricSuggestion (561-582, 22 lines)
  🔗 calculateStructuralScore (587-633, 47 lines)
  🔗 updateMetricBaseline (638-663, 26 lines)
  🔗 performMultiAnalysis (668-836, 169 lines)
  🔗 initializeBaseline (841-853, 13 lines)

src/core/risk-assessor.ts
  🚫 assessProject (23-98, 76 lines)
  🔗 assessFunction (103-131, 29 lines)
  🚫 getViolations (136-152, 17 lines)
  🔗 getContextualThresholds (157-186, 30 lines)
  🔗 adjustForExperienceLevel (191-203, 13 lines)
  🔗 adjustForProjectType (208-220, 13 lines)
  🔗 adjustForCodebaseSize (225-237, 13 lines)
  🔗 scaleNumericThresholds (242-264, 23 lines)
  🚫 createAssessmentSummary (269-323, 55 lines)

src/core/storage-manager.ts
  🔗 initialize (16-36, 21 lines)
  🔗 createStorage (38-53, 16 lines)
  🚫 getStorage (59-64, 6 lines)
  🚫 getOrInitialize (69-74, 6 lines)
  🔗 close (79-84, 6 lines)

src/core/storage-provider.ts
  🚫 constructor (14-14, 1 lines)
  🔗 getInstance (16-21, 6 lines)
  🚫 getStorage (28-52, 25 lines)
  🔗 initializeStorage (54-77, 24 lines)
  🔗 loadConfig (79-82, 4 lines)
  🔗 close (87-92, 6 lines)
  🚫 reset (97-104, 8 lines)
  🔗 getStorage (110-116, 7 lines)

src/data/metric-explanations.ts
  🚫 getMetricExplanation (579-581, 3 lines)
  🚫 getConceptExplanation (583-585, 3 lines)
  🚫 getAllMetrics (587-589, 3 lines)
  🚫 getMetricsByCategory (591-593, 3 lines)
  🚫 getAllConcepts (595-597, 3 lines)
  🚫 searchMetrics (599-607, 9 lines)

src/metrics/quality-calculator.ts
  🚫 calculate (8-67, 60 lines)
  🚫 isFunctionLike (69-77, 9 lines)
  🔗 calculateFromText (79-102, 24 lines)
  🔗 calculateLinesOfCode (104-124, 21 lines)
  🔗 calculateTotalLines (126-128, 3 lines)
  🔗 isBasicControlFlowNode (130-142, 13 lines)
  🔗 isLogicalBinaryExpression (144-154, 11 lines)
  🚫 shouldIncrementComplexity (156-158, 3 lines)
  🔗 calculateCyclomaticComplexity (160-172, 13 lines)
  🔗 calculateCognitiveComplexity (174-214, 41 lines)
  🚫 getCognitiveComplexityInfo (216-267, 52 lines)
  🔗 getSwitchComplexityInfo (273-278, 6 lines)
  🔗 getCaseClauseComplexityInfo (285-296, 12 lines)
  🔗 caseHasFallThrough (301-324, 24 lines)
  🔗 hasIntentionalFallThroughComment (330-376, 47 lines)
  🔗 getNextCaseNode (381-395, 15 lines)
  🔗 getCommentsInRange (400-415, 16 lines)
  🔗 endsWithControlFlow (420-438, 19 lines)
  🔗 blockEndsWithControlFlow (443-463, 21 lines)
  🔗 calculateMaxNestingLevel (465-486, 22 lines)
  🚫 isNestingNode (488-501, 14 lines)
  🔗 countReturnStatements (503-515, 13 lines)
  🔗 countBranches (517-529, 13 lines)
  🔗 countLoops (531-549, 19 lines)
  🔗 countTryCatch (551-563, 13 lines)
  🔗 countAsyncAwait (565-577, 13 lines)
  🔗 countCallbacks (579-595, 17 lines)
  🔗 calculateCommentLines (597-615, 19 lines)
  🔗 calculateHalsteadVolume (617-624, 8 lines)
  🔗 collectHalsteadMetrics (626-646, 21 lines)
  🚫 processOperators (648-672, 25 lines)
  🔗 processBinaryOperator (674-681, 8 lines)
  🔗 processUnaryOperator (683-692, 10 lines)
  🔗 addOperator (694-697, 4 lines)
  🔗 getUnaryOperator (699-716, 18 lines)
  🚫 processOperands (718-736, 19 lines)
  🔗 calculateHalsteadDifficulty (738-748, 11 lines)
  🔗 calculateMaintainabilityIndex (750-774, 25 lines)

src/migrations/001_initial_schema.ts
  🚫 up (11-32, 22 lines)
  🚫 down (34-83, 50 lines)
  🔗 validateInitialSchema (88-180, 93 lines)

src/migrations/002_refactoring_health_engine.ts
  🚫 up (18-83, 66 lines)
  🚫 down (85-112, 28 lines)
  🔗 validateMigration (117-157, 41 lines)

src/migrations/helpers.ts
  🔗 preserveTableData (16-69, 54 lines)
  🚫 preserveMultipleTables (79-100, 22 lines)
  🔗 checkTableExists (105-121, 17 lines)
  🚫 checkColumnExists (126-147, 22 lines)
  🚫 cleanupOldBackups (158-171, 14 lines)
  🔗 getBackupTables (176-185, 10 lines)
  🔗 calculateCutoffDate (190-194, 5 lines)
  🔗 deleteOldBackupTables (199-218, 20 lines)
  🔗 extractTableDate (223-231, 9 lines)
  🔗 tryDeleteTable (236-245, 10 lines)
  🔗 extractCreationDate (255-265, 11 lines)
  🚫 transformBackupRow (270-279, 10 lines)
  🚫 listBackupTables (284-302, 19 lines)
  🚫 safeDropTable (307-322, 16 lines)
  🚫 getMigrationStats (327-353, 27 lines)

src/migrations/kysely-migration-manager.ts
  🔗 createDummyPool (44-53, 10 lines)
  🚫 constructor (63-65, 3 lines)
  🚫 createAdapter (67-102, 36 lines)
  🚫 createDriver (104-106, 3 lines)
  🔗 createQueryCompiler (108-113, 6 lines)
  🔗 createIntrospector (115-120, 6 lines)
  🚫 constructor (130-132, 3 lines)
  🔗 getMigrations (134-182, 49 lines)
  🚫 constructor (190-190, 1 lines)
  🔗 executeQuery (192-195, 4 lines)
  🚫 streamQuery (197-201, 5 lines)
  🚫 constructor (209-209, 1 lines)
  🚫 init (211-213, 3 lines)
  🚫 acquireConnection (215-217, 3 lines)
  🚫 beginTransaction (219-224, 6 lines)
  🚫 commitTransaction (226-228, 3 lines)
  🚫 rollbackTransaction (230-232, 3 lines)
  🚫 releaseConnection (234-236, 3 lines)
  🔗 destroy (238-240, 3 lines)
  🚫 constructor (253-267, 15 lines)
  🔗 migrateToLatest (272-294, 23 lines)
  🔗 migrateDown (299-316, 18 lines)
  🚫 getMigrationStatus (321-346, 26 lines)
  🚫 createMigration (351-384, 34 lines)
  🚫 preserveTableData (390-435, 46 lines)
  🔗 listBackupTables (440-473, 34 lines)
  🚫 cleanupOldBackups (478-502, 25 lines)
  🔗 handleMigrationError (507-540, 34 lines)
  🔗 detectMissingMigrationFiles (545-569, 25 lines)
  🚫 diagnoseMigrationHealth (574-673, 100 lines)
  🔗 detectOrphanedMigrationFiles (678-701, 24 lines)
  🔗 detectSyntaxErrors (706-730, 25 lines)
  🔗 detectUncommittedMigrationFiles (735-749, 15 lines)
  🔗 archiveMigration (754-779, 26 lines)
  🔗 ensureMigrationArchiveTable (784-798, 15 lines)
  🔗 calculateChecksum (803-817, 15 lines)
  🔗 generateUUID (822-828, 7 lines)
  🚫 restoreMissingMigrations (833-939, 107 lines)
  🔗 archivePendingMigrations (945-963, 19 lines)
  🚫 getKyselyInstance (968-970, 3 lines)
  🚫 close (975-983, 9 lines)

src/refactoring/refactoring-analyzer.ts
  🚫 constructor (22-25, 4 lines)
  🚫 analyzeProject (30-58, 29 lines)
  🔗 detectOpportunities (63-82, 20 lines)
  🚫 assessImpact (87-104, 18 lines)
  🚫 generatePlan (109-121, 13 lines)
  🔗 applyAnalysisFilters (127-149, 23 lines)
  🔗 detectPatternOpportunity (151-174, 24 lines)
  🔗 getPatternDetector (176-193, 18 lines)
  🔗 identifyQualityHotSpots (195-220, 26 lines)
  🔗 identifyQualityIssues (222-275, 54 lines)
  🔗 calculateRiskScore (277-303, 27 lines)
  🔗 analyzeTrends (305-308, 4 lines)
  🔗 generateProjectSummary (310-332, 23 lines)
  🔗 identifyPriorityAreas (334-352, 19 lines)
  🔗 generateRecommendations (354-378, 25 lines)
  🔗 estimateEffortForPattern (380-390, 11 lines)
  🔗 describeBenefitForPattern (392-402, 11 lines)
  🔗 prioritizeOpportunities (404-416, 13 lines)
  🔗 groupIntoPhases (418-446, 29 lines)
  🔗 analyzeDependencies (448-453, 6 lines)
  🔗 calculateTotalEffort (455-460, 6 lines)
  🔗 assessOverallRisk (462-469, 8 lines)
  🔗 summarizeExpectedBenefits (471-479, 9 lines)
  🔗 assessRefactoringRisk (481-489, 9 lines)
  🔗 assessRefactoringBenefit (491-501, 11 lines)
  🔗 estimateRefactoringEffort (503-517, 15 lines)
  🔗 calculateRecommendation (519-528, 10 lines)
  🚫 constructor (689-689, 1 lines)
  🔗 detect (691-729, 39 lines)
  🔗 identifyExtractableBlocks (731-734, 4 lines)
  🚫 constructor (738-738, 1 lines)
  🚫 detect (740-771, 32 lines)
  🔗 estimateResponsibilities (773-778, 6 lines)
  🚫 constructor (782-782, 1 lines)
  🚫 detect (784-804, 21 lines)
  🚫 constructor (808-808, 1 lines)
  🚫 detect (810-814, 5 lines)
  🚫 constructor (818-818, 1 lines)
  🚫 detect (820-844, 25 lines)
  🚫 constructor (848-848, 1 lines)
  🚫 detect (850-871, 22 lines)
  🔗 assessNameClarity (873-887, 15 lines)
  🔗 identifyNameIssues (889-897, 9 lines)

src/refactoring/session-manager-simple.ts
  🚫 constructor (29-37, 9 lines)
  🚫 createSession (42-97, 56 lines)
  🚫 getActiveSessions (102-127, 26 lines)
  🚫 getAllSessions (132-134, 3 lines)
  🔗 getSession (140-142, 3 lines)
  🔗 mapRowToRefactoringSession (148-177, 30 lines)
  🔗 safeJsonParse (182-189, 8 lines)
  🚫 addFunctionsToSession (194-225, 32 lines)
  🚫 updateFunctionStatus (230-248, 19 lines)
  🚫 getSessionSummary (253-319, 67 lines)
  🚫 completeSession (324-346, 23 lines)
  🚫 cancelSession (351-373, 23 lines)
  🚫 getSessionFunctions (378-395, 18 lines)
  🔗 updateSession (400-451, 52 lines)
  🚫 associateSnapshotWithSession (456-477, 22 lines)
  🚫 getSessionSnapshots (482-490, 9 lines)
  🚫 linkOpportunitiesToSession (495-508, 14 lines)
  🚫 listSessions (513-538, 26 lines)
  🚫 getSessionOpportunities (543-559, 17 lines)

src/services/ann-index.ts
  🚫 constructor (58-60, 3 lines)
  🚫 setSeed (91-93, 3 lines)
  🚫 constructor (298-300, 3 lines)

src/services/embedding-service.ts
  🚫 constructor (57-79, 23 lines)
  🚫 initialize (84-86, 3 lines)
  🚫 isInitialized (91-93, 3 lines)
  🚫 getModelInfo (98-104, 7 lines)
  🚫 getANNInfo (109-116, 8 lines)
  🚫 buildANNIndex (121-145, 25 lines)
  🚫 addToANNIndex (150-174, 25 lines)
  🚫 semanticSearch (179-225, 47 lines)
  🔗 exactSemanticSearch (230-272, 43 lines)
  🔗 isANNIndexReady (277-279, 3 lines)
  🚫 getIndexStatistics (284-294, 11 lines)
  🚫 rebuildANNIndex (299-315, 17 lines)
  🔗 generateEmbedding (320-337, 18 lines)
  🔗 batchGenerateEmbeddings (342-368, 27 lines)
  🚫 generateFunctionEmbeddings (373-409, 37 lines)
  🚫 prepareFunctionText (414-464, 51 lines)
  🔗 extractJsDocExamples (469-477, 9 lines)
  🔗 cleanJsDoc (482-498, 17 lines)
  🔗 cosineSimilarity (503-520, 18 lines)
  🚫 euclideanDistance (525-537, 13 lines)

src/services/embedding/enhanced-service.ts
  🚫 constructor (39-42, 4 lines)
  🚫 initialize (47-58, 12 lines)
  🔗 cleanupResources (63-76, 14 lines)
  🔗 initializeComponents (81-91, 11 lines)
  🚫 generateFunctionEmbeddings (96-146, 51 lines)
  🔗 buildIndex (151-166, 16 lines)
  🚫 addToIndex (171-187, 17 lines)
  🔗 convertToEmbeddingVectors (192-203, 12 lines)
  🚫 semanticSearch (208-262, 55 lines)
  🔗 isReady (267-273, 7 lines)
  🔗 getStats (278-292, 15 lines)
  🚫 prepareFunctionText (297-340, 44 lines)
  🔗 formatParameterInfo (345-354, 10 lines)
  🔗 extractJsDocExamples (359-367, 9 lines)
  🔗 cleanJsDoc (372-388, 17 lines)
  🔗 exactSemanticSearch (393-423, 31 lines)
  🔗 cosineSimilarity (428-445, 18 lines)
  🚫 estimateTokenCount (450-453, 4 lines)
  🔗 updateSearchStats (458-465, 8 lines)

src/services/embedding/openai-client.ts
  🚫 constructor (36-43, 8 lines)
  🔗 initializeClient (45-52, 8 lines)
  🚫 initialize (57-59, 3 lines)
  🚫 generateEmbedding (64-110, 47 lines)
  🚫 batchGenerateEmbeddings (115-158, 44 lines)
  🚫 processBatchChunk (163-202, 40 lines)
  🚫 getModelInfo (207-214, 8 lines)
  🚫 isInitialized (219-221, 3 lines)
  🚫 getStats (226-235, 10 lines)
  🔗 isNonRetryableError (240-250, 11 lines)
  🔗 calculateBackoffDelay (255-258, 4 lines)
  🔗 sleep (263-265, 3 lines)
  🔗 updateResponseTime (270-275, 6 lines)

src/services/embedding/vector-store.ts
  🚫 constructor (52-65, 14 lines)
  🔗 initializeIndex (70-80, 11 lines)
  🔗 buildIndex (85-115, 31 lines)
  🚫 addEmbeddings (120-148, 29 lines)
  🚫 removeEmbeddings (153-173, 21 lines)
  🔗 search (178-205, 28 lines)
  🚫 isReady (210-212, 3 lines)
  🔗 getStats (217-229, 13 lines)
  🔗 clear (234-242, 9 lines)
  🚫 getEmbeddings (247-258, 12 lines)
  🔗 shouldFlushBuffer (263-265, 3 lines)
  🔗 scheduleBufferFlush (270-278, 9 lines)
  🔗 flushBuffer (283-324, 42 lines)
  🔗 clearBuffer (329-337, 9 lines)

src/services/health-analysis-service.ts
  🔗 analyzeFunction (54-96, 43 lines)
  🚫 generateRefactoringPlan (103-127, 25 lines)
  🔗 calculateRefactoringPriority (135-171, 37 lines)
  🔗 estimateComplexityReduction (178-206, 29 lines)
  🔗 generateSmartPrompt (214-239, 26 lines)
  🔗 extractPatternsFromSuggestions (248-267, 20 lines)
  🔗 extractTargetPatterns (276-313, 38 lines)

src/services/local-similarity-service.ts
  🚫 simpleStem (48-73, 26 lines)
  🔗 tokenizeText (78-94, 17 lines)
  🔗 generateNgrams (99-108, 10 lines)
  🔗 calculateTFIDF (113-148, 36 lines)
  🔗 calculateCosineSimilarity (153-166, 14 lines)
  🔗 calculateJaccardSimilarity (171-175, 5 lines)
  🚫 constructor (185-195, 11 lines)
  🚫 indexDocuments (200-264, 65 lines)
  🚫 searchSimilar (269-371, 103 lines)
  🔗 getMetrics (376-407, 32 lines)
  🔗 clear (412-415, 4 lines)

src/similarity/advanced-similarity-detector.ts
  🚫 constructor (54-58, 5 lines)
  🔗 createConfig (60-72, 13 lines)
  🔗 calculateOptimalCacheSize (74-88, 15 lines)
  🚫 isAvailable (90-92, 3 lines)
  🚫 detect (94-112, 19 lines)
  🔗 detectAdvancedMode (117-129, 13 lines)
  🔗 executeDetectionAlgorithms (134-153, 20 lines)
  🔗 detectTwoStageMode (158-181, 24 lines)
  🔗 extractCandidates (186-244, 59 lines)
  🔗 applyHierarchicalLSH (249-298, 50 lines)
  🔗 stratifiedSample (303-334, 32 lines)
  🔗 postFilterCandidates (339-354, 16 lines)
  🔗 mergeResults (359-394, 36 lines)
  🔗 createPairKey (396-401, 6 lines)
  🔗 detectFastMode (406-450, 45 lines)
  🔗 parseDetectionOptions (452-461, 10 lines)
  🔗 filterValidFunctions (463-481, 19 lines)
  🔗 initializeProject (483-527, 45 lines)
  🔗 ensureFilesLoaded (529-551, 23 lines)
  🔗 fileExists (553-561, 9 lines)
  🔗 generateFingerprints (563-633, 71 lines)
  🔗 generateFunctionFingerprint (635-679, 45 lines)
  🔗 generateFingerprintFromSource (684-708, 25 lines)
  🔗 tokenizeSourceCode (710-716, 7 lines)
  🔗 canonicalizeTokens (718-740, 23 lines)
  🔗 findFunctionNode (742-760, 19 lines)
  🔗 canonicalizeAST (765-778, 14 lines)
  🔗 canonicalizeNode (780-808, 29 lines)
  🔗 shouldSkipNode (810-812, 3 lines)
  🔗 canonicalizeIdentifier (814-836, 23 lines)
  🔗 isFunctionContext (838-844, 7 lines)
  🔗 canonicalizeLiteral (846-856, 11 lines)
  🔗 computeMerkleHash (861-871, 11 lines)
  🔗 computeNodeMerkleHash (873-880, 8 lines)
  🔗 hash64 (882-896, 15 lines)
  🔗 mixHashes (898-910, 13 lines)
  🔗 generateSimHashFingerprints (915-943, 29 lines)
  🔗 computeSimHash (948-971, 24 lines)
  🔗 computeSignatureHash (976-979, 4 lines)
  🔗 extractStructuralSignature (981-1011, 31 lines)
  🔗 detectExactMatches (1016-1046, 31 lines)
  🔗 detectNearDuplicates (1051-1110, 60 lines)
  🔗 applyHierarchicalLSHToLargeBucket (1115-1144, 30 lines)
  🔗 getLSHBucketKey (1146-1150, 5 lines)
  🔗 logLSHBucketDistribution (1155-1186, 32 lines)
  🔗 checkSmallBucketCandidates (1191-1233, 43 lines)
  🔗 computeSimHashSimilarity (1235-1248, 14 lines)
  🔗 computeHammingDistance (1250-1261, 12 lines)
  🔗 hammingDistance (1263-1273, 11 lines)
  🔗 isValidSimilarity (1278-1319, 42 lines)
  🔗 areNamesSimilar (1321-1340, 20 lines)
  🔗 editDistance (1342-1362, 21 lines)
  🔗 detectStructuralSimilarities (1367-1399, 33 lines)
  🔗 computeStructuralSimilarity (1401-1418, 18 lines)
  🔗 jaccardSimilarity (1420-1428, 9 lines)
  🔗 shouldIncludeGroup (1433-1443, 11 lines)
  🔗 shouldIncludePair (1445-1456, 12 lines)
  🔗 createSimilarityResult (1458-1486, 29 lines)
  🔗 computeAverageComplexity (1488-1496, 9 lines)
  🔗 computeAverageLines (1498-1504, 7 lines)
  🔗 deduplicateResults (1506-1514, 9 lines)
  🔗 mergeOverlappingGroups (1519-1542, 24 lines)
  🔗 findConnectedGroups (1544-1557, 14 lines)
  🔗 mergeGroupsIntoOne (1559-1594, 36 lines)

src/similarity/ann-similarity-detector.ts
  🚫 constructor (24-30, 7 lines)
  🚫 isAvailable (32-40, 9 lines)
  🚫 detect (42-103, 62 lines)
  🔗 loadEmbeddings (105-126, 22 lines)
  🔗 parseDetectionOptions (128-134, 7 lines)
  🔗 passesFilters (136-154, 19 lines)
  🔗 getPairKey (156-158, 3 lines)
  🔗 createSimilarityResult (160-179, 20 lines)
  🔗 createSimilarFunction (181-190, 10 lines)
  🔗 groupSimilarFunctions (192-266, 75 lines)

src/similarity/ast-canonicalizer.ts
  🔗 canonicalize (22-33, 12 lines)
  🚫 canonicalizeSourceCode (38-65, 28 lines)
  🔗 findArrowFunctions (67-77, 11 lines)
  🔗 canonicalizeNode (79-101, 23 lines)
  🔗 canonicalizeBlock (103-116, 14 lines)
  🔗 canonicalizeIfStatement (118-142, 25 lines)
  🔗 canonicalizeLoop (144-150, 7 lines)
  🔗 canonicalizeReturnStatement (152-161, 10 lines)
  🔗 canonicalizeVariableStatement (163-166, 4 lines)
  🔗 canonicalizeExpressionStatement (168-172, 5 lines)
  🔗 canonicalizeTryStatement (174-183, 10 lines)
  🔗 canonicalizeSwitchStatement (185-188, 4 lines)
  🔗 canonicalizeCallExpression (190-201, 12 lines)
  🔗 canonicalizeBinaryExpression (203-212, 10 lines)
  🔗 canonicalizePropertyAccess (214-223, 10 lines)
  🔗 canonicalizeIdentifier (225-278, 54 lines)
  🔗 isStatementNode (280-294, 15 lines)
  🔗 isExpressionNode (296-303, 8 lines)
  🔗 isLiteralNode (305-315, 11 lines)
  🔗 isKeywordNode (317-333, 17 lines)
  🔗 canonicalizeStatementNode (335-359, 25 lines)
  🔗 canonicalizeExpressionNode (361-374, 14 lines)
  🔗 canonicalizeLiteralNode (376-393, 18 lines)
  🔗 canonicalizeKeywordNode (395-413, 19 lines)
  🔗 canonicalizeChildren (415-421, 7 lines)
  🚫 calculateASTSimilarity (427-435, 9 lines)
  🔗 levenshteinDistance (437-458, 22 lines)

src/similarity/ast-similarity-detector.ts
  🚫 constructor (24-46, 23 lines)
  🚫 dispose (48-52, 5 lines)
  🚫 detect (54-63, 10 lines)
  🚫 isAvailable (65-67, 3 lines)
  🔗 parseDetectionOptions (69-75, 7 lines)
  🔗 filterValidFunctions (77-82, 6 lines)
  🔗 detectPairwiseSimilarities (84-112, 29 lines)
  🔗 shouldSkipComparison (114-128, 15 lines)
  🔗 createSimilarityResult (130-149, 20 lines)
  🔗 calculateSimilarity (151-189, 39 lines)
  🔗 calculateASTStructureSimilarity (191-211, 21 lines)
  🔗 calculateTextBasedSimilarity (213-222, 10 lines)
  🔗 normalizeCode (224-265, 42 lines)
  🔗 calculateSignatureSimilarity (267-293, 27 lines)
  🔗 calculateMetricsSimilarity (295-327, 33 lines)
  🔗 calculateParameterSimilarity (329-343, 15 lines)
  🔗 calculateReturnTypeSimilarity (345-353, 9 lines)
  🔗 levenshteinDistance (355-376, 22 lines)
  🔗 getPairKey (378-380, 3 lines)
  🔗 createSimilarFunction (382-391, 10 lines)
  🔗 groupSimilarFunctions (393-398, 6 lines)
  🔗 buildSimilarityGraph (400-418, 19 lines)
  🔗 ensureNodeExists (420-424, 5 lines)
  🔗 findConnectedComponents (426-440, 15 lines)
  🔗 exploreComponent (442-466, 25 lines)
  🔗 createGroupedResults (468-490, 23 lines)
  🚫 getFunctionsInComponent (492-499, 8 lines)
  🚫 calculateAverageSimilarity (501-514, 14 lines)
  🚫 findFirstMatchingResult (516-524, 9 lines)

src/similarity/hash-similarity-detector.ts
  🚫 isAvailable (18-20, 3 lines)
  🚫 detect (22-33, 12 lines)
  🔗 parseDetectionOptions (35-41, 7 lines)
  🔗 filterValidFunctions (43-48, 6 lines)
  🔗 detectHashSimilarities (50-90, 41 lines)
  🔗 groupByHash (92-153, 62 lines)
  🔗 createHashResults (155-182, 28 lines)
  🔗 createSimilarityResult (184-206, 23 lines)
  🔗 createSimilarFunction (208-217, 10 lines)
  🔗 groupSimilarFunctions (219-271, 53 lines)

src/similarity/similarity-manager.ts
  🚫 constructor (19-34, 16 lines)
  🔗 registerDetector (36-38, 3 lines)
  🔗 detectSimilarities (40-53, 14 lines)
  🔗 runSpecificDetectors (55-92, 38 lines)
  🔗 runPriorityBasedDetection (94-136, 43 lines)
  🔗 applyConsensus (138-159, 22 lines)
  🔗 majorityConsensus (161-203, 43 lines)
  🔗 intersectionConsensus (205-247, 43 lines)
  🔗 weightedConsensus (249-295, 47 lines)
  🔗 getPairKey (297-302, 6 lines)
  🚫 getAvailableDetectors (304-306, 3 lines)

src/storage/bulk-insert-utils.ts
  🔗 formatPostgresArray (11-21, 11 lines)
  🚫 prepareBulkInsertData (33-55, 23 lines)
  🔗 buildFunctionRow (57-88, 32 lines)
  🔗 buildParameterRows (90-102, 13 lines)
  🔗 buildMetricsRow (104-125, 22 lines)
  🚫 generateBulkInsertSQL (130-149, 20 lines)
  🚫 splitIntoBatches (154-162, 9 lines)
  🚫 calculateOptimalBatchSize (171-179, 9 lines)

src/storage/pglite-adapter.ts
  🚫 constructor (53-60, 8 lines)
  🔗 hasTestTrackingProperty (66-68, 3 lines)
  🔗 isTestTrackingFunction (73-75, 3 lines)
  🚫 constructor (113-132, 20 lines)
  🔗 validateDbPath (137-181, 45 lines)
  🔗 validateWindowsFilePath (187-261, 75 lines)
  🔗 shouldCheckDatabaseDirectory (267-282, 16 lines)
  🚫 init (284-332, 49 lines)
  🔗 close (334-360, 27 lines)
  🚫 saveSnapshot (366-396, 31 lines)
  🔗 getSnapshots (398-423, 26 lines)
  🔗 getSnapshot (425-440, 16 lines)
  🔗 deleteSnapshot (442-452, 11 lines)
  🔗 getLatestSnapshot (457-476, 20 lines)
  🚫 getLastConfigHash (482-499, 18 lines)
  🔗 getFunctions (505-632, 128 lines)
  🔗 getFunctionsBySnapshot (634-661, 28 lines)
  🔗 queryFunctions (663-679, 17 lines)
  🚫 diffSnapshots (685-710, 26 lines)
  🔗 validateAndLoadSnapshots (712-721, 10 lines)
  🔗 loadSnapshotFunctions (723-727, 5 lines)
  🔗 calculateSnapshotDifferences (729-742, 14 lines)
  🔗 categorizeChangedFunctions (744-766, 23 lines)
  🔗 findRemovedFunctions (768-778, 11 lines)
  🔗 calculateFunctionChanges (780-830, 51 lines)
  🔗 calculateChangeImpact (832-857, 26 lines)
  🔗 calculateDiffStatistics (859-877, 19 lines)
  🔗 aggregateMetrics (879-897, 19 lines)
  🚫 saveFunctionDescription (903-944, 42 lines)
  🚫 getFunctionDescription (946-992, 47 lines)
  🚫 getFunctionsNeedingDescriptions (994-1049, 56 lines)
  🚫 searchFunctionsByDescription (1051-1109, 59 lines)
  🚫 getFunctionsWithDescriptions (1111-1158, 48 lines)
  🚫 getFunctionsWithoutDescriptions (1160-1206, 47 lines)
  🚫 saveEmbedding (1212-1239, 28 lines)
  🚫 getEmbedding (1241-1262, 22 lines)
  🚫 searchByEmbedding (1264-1341, 78 lines)
  🚫 bulkSaveEmbeddings (1343-1353, 11 lines)
  🚫 getFunctionsWithoutEmbeddings (1355-1396, 42 lines)
  🚫 getFunctionsWithEmbeddings (1398-1438, 41 lines)
  🚫 getFunction (1440-1474, 35 lines)
  🚫 getFunctionsBatch (1476-1526, 51 lines)
  🚫 getEmbeddingStats (1528-1556, 29 lines)
  🚫 saveANNIndex (1565-1616, 52 lines)
  🚫 getCurrentANNIndex (1621-1676, 56 lines)
  🚫 getAllANNIndexes (1681-1724, 44 lines)
  🚫 deleteANNIndex (1729-1737, 9 lines)
  🚫 getANNIndexStats (1742-1809, 68 lines)
  🚫 saveLineage (1819-1851, 33 lines)
  🚫 getLineage (1853-1889, 37 lines)
  🚫 getLineages (1891-1946, 56 lines)
  🚫 getLineagesWithFunctionFilter (1948-2036, 89 lines)
  🚫 updateLineageStatus (2038-2055, 18 lines)
  🔗 formatPostgresArrayLiteral (2057-2067, 11 lines)
  🚫 updateLineage (2069-2105, 37 lines)
  🚫 deleteLineage (2107-2118, 12 lines)
  🚫 getLineagesByCommit (2120-2135, 16 lines)
  🚫 getFunctionLineageHistory (2137-2154, 18 lines)
  🚫 pruneDraftLineages (2156-2177, 22 lines)
  🔗 mapRowToLineage (2179-2243, 65 lines)
  🚫 cleanup (2245-2247, 3 lines)
  🚫 backup (2249-2251, 3 lines)
  🚫 restore (2253-2255, 3 lines)
  🔗 executeInTransaction (2265-2285, 21 lines)
  🚫 beginTransaction (2290-2292, 3 lines)
  🚫 commitTransaction (2297-2299, 3 lines)
  🚫 rollbackTransaction (2304-2306, 3 lines)
  🚫 getFunctionHistory (2316-2414, 99 lines)
  🚫 bulkDeleteFunctionsBySnapshot (2423-2444, 22 lines)
  🚫 bulkUpdateQualityMetrics (2449-2495, 47 lines)
  🔗 ensureInitialized (2505-2510, 6 lines)
  🔗 createSchema (2512-2515, 4 lines)
  🔗 initializeWithMigrations (2525-2528, 4 lines)
  🔗 createTablesDirectly (2534-2558, 25 lines)
  🔗 generateSnapshotId (2560-2562, 3 lines)
  🚫 createSnapshotRecord (2564-2593, 30 lines)
  🚫 saveFunctions (2598-2642, 45 lines)
  🔗 insertFunctionRecord (2647-2693, 47 lines)
  🔗 insertFunctionParameters (2695-2716, 22 lines)
  🔗 insertFunctionMetrics (2718-2755, 38 lines)
  🚫 saveSingleFunction (2757-2761, 5 lines)
  🚫 saveFunctionsBatch (2763-2784, 22 lines)
  🔗 saveFunctionsBulk (2789-2902, 114 lines)
  🔗 getFunctionParameters (2904-2910, 7 lines)
  🔗 getFunctionParametersBatch (2912-2936, 25 lines)
  🔗 mapRowToSnapshotInfo (2938-2960, 23 lines)
  🔗 mapRowToFunctionInfo (2962-2977, 16 lines)
  🔗 createBaseFunctionInfo (2979-3012, 34 lines)
  🔗 mapParameters (3014-3025, 12 lines)
  🔗 addOptionalProperties (3027-3048, 22 lines)
  🔗 addMetricsIfAvailable (3050-3070, 21 lines)
  🔗 getOptionalMetrics (3072-3083, 12 lines)
  🔗 calculateSnapshotMetadata (3085-3128, 44 lines)
  🔗 getGitCommit (3131-3140, 10 lines)
  🔗 getGitBranch (3142-3151, 10 lines)
  🔗 getGitTag (3153-3163, 11 lines)
  🚫 saveNamingEvaluation (3169-3212, 44 lines)
  🚫 getNamingEvaluation (3214-3263, 50 lines)
  🚫 getFunctionsNeedingEvaluation (3265-3309, 45 lines)
  🚫 getFunctionsWithEvaluations (3311-3383, 73 lines)
  🚫 updateEvaluationRevisionStatus (3385-3396, 12 lines)
  🚫 batchSaveEvaluations (3398-3466, 69 lines)
  🚫 getEvaluationStatistics (3468-3539, 72 lines)
  🔗 safeJsonParse (3544-3551, 8 lines)
  🚫 getAllRefactoringSessions (3557-3584, 28 lines)
  🔗 mapRowToRefactoringSession (3591-3620, 30 lines)
  🔗 saveRefactoringChangeset (3630-3670, 41 lines)
  🚫 getRefactoringChangeset (3675-3689, 15 lines)
  🚫 getRefactoringChangesetsBySession (3694-3705, 12 lines)
  🚫 updateRefactoringChangeset (3710-3749, 40 lines)
  🚫 getFunctionsBySnapshotId (3754-3756, 3 lines)
  🚫 getLineagesByFunctionId (3761-3770, 10 lines)
  🚫 updateRefactoringSession (3775-3814, 40 lines)
  🚫 getRefactoringSessions (3819-3843, 25 lines)
  🔗 mapRowToRefactoringChangeset (3848-3886, 39 lines)
  🚫 saveRefactoringSession (3891-3919, 29 lines)
  🚫 getRefactoringSession (3924-3948, 25 lines)
  🔗 insertCallEdges (3957-4004, 48 lines)
  🚫 getCallEdgesByCaller (4009-4024, 16 lines)
  🚫 getCallEdgesByCallee (4029-4044, 16 lines)
  🚫 getCallEdges (4049-4111, 63 lines)
  🚫 getCallEdgesBySnapshot (4116-4133, 18 lines)
  🚫 deleteCallEdgesByCaller (4138-4152, 15 lines)
  🚫 deleteCallEdges (4157-4177, 21 lines)
  🚫 mapRowToCallEdge (4182-4199, 18 lines)
  🚫 getDb (4206-4208, 3 lines)

src/types/common.ts
  🔗 isStringArray (188-190, 3 lines)
  🔗 isRecord (192-194, 3 lines)
  🚫 isConfigValue (196-206, 11 lines)

src/types/reader.ts
  🚫 map (14-16, 3 lines)
  🚫 mapAsync (21-25, 5 lines)
  🚫 flatMap (30-34, 5 lines)
  🚫 flatMapAsync (39-43, 5 lines)
  🚫 pure (48-50, 3 lines)
  🚫 pureAsync (55-57, 3 lines)
  🚫 ask (62-64, 3 lines)
  🚫 askAsync (69-71, 3 lines)

src/use-cases/confirmation-handler.ts
  🚫 confirm (25-60, 36 lines)
  🚫 createVectorizeConfirmationMessage (65-83, 19 lines)
  🚫 estimateEmbeddingCost (88-104, 17 lines)

src/use-cases/output-formatter.ts
  🚫 constructor (26-26, 1 lines)
  🚫 format (31-37, 7 lines)
  🔗 formatJSON (42-54, 13 lines)
  🔗 formatConsole (59-78, 20 lines)
  🔗 formatVectorizeResult (83-114, 32 lines)
  🔗 formatStatusResult (119-157, 39 lines)
  🔗 formatIndexResult (162-176, 15 lines)
  🔗 formatBenchmarkResult (181-193, 13 lines)
  🔗 formatIndexStatsResult (198-214, 17 lines)
  🔗 formatErrors (219-230, 12 lines)
  🔗 colorize (235-256, 22 lines)
  🔗 formatBytes (261-269, 9 lines)

src/use-cases/vectorize-options.ts
  🚫 validate (98-112, 15 lines)
  🔗 parseIndexConfig (117-147, 31 lines)
  🚫 requiresApiKey (152-154, 3 lines)
  🚫 isDangerousOperation (159-161, 3 lines)
  🚫 getOperationDescription (166-180, 15 lines)

src/use-cases/vectorize-use-case.ts
  🚫 constructor (71-71, 1 lines)
  🚫 execute (76-111, 36 lines)
  🔗 vectorizeFunctions (116-168, 53 lines)
  🔗 getStatus (173-198, 26 lines)
  🔗 rebuildIndex (203-210, 8 lines)
  🔗 benchmarkIndex (215-224, 10 lines)
  🔗 getIndexStats (229-232, 4 lines)
  🔗 getFunctionsToVectorize (237-260, 24 lines)
  🔗 getModelDimension (265-272, 8 lines)
  🔗 getOperationType (277-283, 7 lines)
  🔗 getEmptyDataForOperation (288-339, 52 lines)

src/utils/analysis-cache.ts
  🚫 constructor (34-62, 29 lines)
  🔗 get (67-88, 22 lines)
  🔗 set (93-111, 19 lines)
  🔗 clear (116-119, 4 lines)
  🚫 getStats (124-135, 12 lines)
  🚫 preload (140-153, 14 lines)
  🚫 cleanup (158-162, 5 lines)
  🔗 generateCacheKey (164-166, 3 lines)
  🔗 calculateFileHash (168-177, 10 lines)
  🔗 isValidCacheEntry (179-195, 17 lines)
  🔗 initializePersistentCache (197-209, 13 lines)
  🔗 loadFromPersistentCache (211-225, 15 lines)
  🔗 saveToPersistentCache (227-236, 10 lines)
  🔗 clearPersistentCache (238-252, 15 lines)
  🔗 cleanupPersistentCache (254-271, 18 lines)

src/utils/ast-utils.ts
  🔗 matchesFunctionDeclaration (17-19, 3 lines)
  🔗 matchesArrowFunctionVariable (21-29, 9 lines)
  🔗 matchesMethodDeclaration (31-37, 7 lines)
  🔗 matchesConstructor (39-41, 3 lines)
  🚫 getNodeForMatch (43-61, 19 lines)
  🚫 findFunctionNode (63-81, 19 lines)

src/utils/batch-processor.ts
  🔗 batchArray (12-22, 11 lines)
  🚫 processFunctionsBatch (27-41, 15 lines)
  🚫 processWithProgress (46-67, 22 lines)
  🔗 getOptimalBatchSize (72-86, 15 lines)
  🚫 calculateFunctionBatchSize (91-99, 9 lines)
  🚫 processWithTransaction (118-141, 24 lines)

src/utils/changeset-evaluator.ts
  🚫 constructor (163-183, 21 lines)
  🔗 evaluateChangeset (188-270, 83 lines)
  🚫 evaluateOperation (275-355, 81 lines)
  🔗 calculateComprehensiveScores (360-402, 43 lines)
  🔗 calculateComplexityScore (407-420, 14 lines)
  🔗 calculateRiskScore (425-433, 9 lines)
  🔗 calculateMaintainabilityScore (438-446, 9 lines)
  🔗 calculateCodeQualityScore (451-463, 13 lines)
  🔗 calculateExplosionPenalty (468-471, 4 lines)
  🔗 determineGenuineImprovement (476-505, 30 lines)
  🔗 calculateOverallGrade (510-522, 13 lines)
  🔗 identifyCriticalIssues (527-555, 29 lines)
  🔗 generateWarnings (560-588, 29 lines)
  🔗 generateRecommendations (593-629, 37 lines)
  🔗 createMockHealthAssessment (634-655, 22 lines)
  🔗 createErrorEvaluationResult (660-723, 64 lines)

src/utils/cli-utils.ts
  🚫 constructor (20-23, 4 lines)
  🔗 error (29-35, 7 lines)
  🔗 warn (37-43, 7 lines)
  🚫 info (45-51, 7 lines)
  🚫 success (53-59, 7 lines)
  🚫 debug (61-67, 7 lines)
  🔗 log (69-72, 4 lines)
  🔗 formatDetails (74-79, 6 lines)
  🚫 constructor (88-92, 5 lines)
  🚫 update (94-110, 17 lines)
  🚫 finish (112-117, 6 lines)
  🚫 formatTable (123-196, 74 lines)
  🚫 prompt (201-215, 15 lines)
  🔗 confirm (220-241, 22 lines)
  🚫 select (246-279, 34 lines)
  🚫 displayBanner (284-297, 14 lines)
  🚫 formatHelp (302-313, 12 lines)
  🔗 exitWithError (318-321, 4 lines)
  🚫 setupErrorHandling (326-354, 29 lines)

src/utils/error-handler.ts
  🚫 constructor (52-61, 10 lines)
  🔗 createError (63-83, 21 lines)
  🔗 getErrorInfo (85-156, 72 lines)
  🔗 handleError (158-173, 16 lines)
  🔗 logError (175-185, 11 lines)
  🔗 suggestRecovery (187-194, 8 lines)
  🔗 getExitCode (196-225, 30 lines)
  🚫 withRetry (227-258, 32 lines)
  🚫 wrapAsync (260-278, 19 lines)

src/utils/explosion-detector.ts
  🚫 constructor (124-134, 11 lines)
  🚫 detectExplosion (139-188, 50 lines)
  🚫 detectChangesetExplosion (193-243, 51 lines)
  🔗 calculateExplosionMetrics (248-271, 24 lines)
  🔗 calculateExplosionScore (276-312, 37 lines)
  🔗 calculateChangesetExplosionScore (317-346, 30 lines)
  🔗 classifyExplosionSeverity (351-357, 7 lines)
  🔗 generateExplosionReasons (362-401, 40 lines)
  🔗 generateChangesetExplosionReasons (406-443, 38 lines)
  🔗 generateRecommendations (448-496, 49 lines)
  🔗 generateChangesetRecommendations (501-532, 32 lines)
  🔗 createNoExplosionResult (537-556, 20 lines)
  🔗 getFunctionInfo (561-570, 10 lines)

src/utils/file-utils.ts
  🚫 fileExists (10-17, 8 lines)
  🚫 ensureDir (22-37, 16 lines)
  🚫 findFiles (49-67, 19 lines)
  🔗 walkDirectory (69-82, 14 lines)
  🔗 processDirectoryEntries (84-103, 20 lines)
  🔗 addFileIfMatches (105-109, 5 lines)
  🔗 shouldExclude (114-124, 11 lines)
  🚫 formatFileSize (129-140, 12 lines)
  🚫 formatDuration (145-162, 18 lines)
  🚫 debounce (167-174, 8 lines)
  🚫 throttle (179-190, 12 lines)
  🔗 sleep (195-197, 3 lines)
  🚫 retry (202-231, 30 lines)
  🚫 percentage (236-239, 4 lines)
  🚫 clamp (244-246, 3 lines)
  🚫 simpleHash (251-259, 9 lines)
  🚫 deepMerge (264-277, 14 lines)
  🔗 parseNumericCondition (282-302, 21 lines)
  🔗 parseRangeCondition (304-312, 9 lines)
  🔗 parseInCondition (314-325, 12 lines)
  🔗 parseComparisonCondition (327-346, 20 lines)
  🔗 parseExactCondition (348-354, 7 lines)
  🚫 calculateFileHash (359-368, 10 lines)

src/utils/format-helpers.ts
  🔗 isJsonOutput (16-18, 3 lines)
  🔗 createStableJsonOutput (24-49, 26 lines)
  🔗 sanitizeForJson (54-72, 19 lines)
  🚫 safeLog (78-86, 9 lines)
  🚫 outputJson (91-101, 11 lines)
  🚫 conditionalLog (106-110, 5 lines)
  🔗 errorLog (115-117, 3 lines)

src/utils/format-utils.ts
  🚫 formatFileSize (4-15, 12 lines)
  🚫 formatDuration (20-37, 18 lines)
  🚫 formatPercentage (42-46, 5 lines)
  🚫 truncateString (51-54, 4 lines)
  🚫 pluralize (59-62, 4 lines)
  🚫 formatFilePath (67-72, 6 lines)
  🚫 formatLineRange (77-82, 6 lines)

src/utils/graph-algorithms.ts
  🚫 findConnectedComponents (10-34, 25 lines)
  🚫 buildItemToGroupsMapping (39-56, 18 lines)

src/utils/hash-winnowing-utility.ts
  🔗 findMinimumHash (10-18, 9 lines)
  🔗 cleanupDeque (20-25, 6 lines)
  🔗 maintainMinimumProperty (27-32, 6 lines)
  🔗 addMinimumToResult (34-46, 13 lines)
  🚫 winnowHashes (48-76, 29 lines)
  🚫 extractKGrams (81-87, 7 lines)

src/utils/lineage-manager.ts
  🚫 constructor (31-34, 4 lines)
  🚫 trackRefactoringOperation (39-68, 30 lines)
  🚫 getRelatedFunctions (73-107, 35 lines)
  🚫 calculateChangesetMetrics (112-154, 43 lines)
  🔗 mapOperationTypeToLineageKind (159-172, 14 lines)
  🔗 calculateOperationConfidence (177-202, 26 lines)
  🔗 updateChangesetWithLineage (207-261, 55 lines)
  🚫 detectRelationships (267-318, 52 lines)
  🔗 analyzeRelationship (323-361, 39 lines)
  🔗 handleChangesetError (366-442, 77 lines)
  🔗 classifyError (447-542, 96 lines)
  🚫 retryChangesetOperation (547-592, 46 lines)

src/utils/parallel-processor.ts
  🚫 constructor (37-41, 5 lines)
  🚫 processFiles (46-103, 58 lines)
  🚫 processFileBatch (108-158, 51 lines)
  🔗 splitFilesForWorkers (163-172, 10 lines)
  🔗 calculateOptimalFilesPerWorker (177-183, 7 lines)
  🔗 shouldUseParallelProcessing (188-192, 5 lines)
  🚫 getRecommendedConfig (197-206, 10 lines)

src/utils/quality-scorer-v16.ts
  🚫 constructor (31-39, 9 lines)
  🚫 calculateFunctionScore (44-87, 44 lines)
  🚫 calculateProjectScore (92-135, 44 lines)
  🔗 calculateBaseScores (140-184, 45 lines)
  🔗 convertEvaluationToScore (189-204, 16 lines)
  🔗 calculateComponentAverages (209-238, 30 lines)
  🔗 calculateProjectStatistics (243-285, 43 lines)
  🔗 getTopProblematicFunctions (290-348, 59 lines)
  🔗 generateRecommendations (353-439, 87 lines)
  🔗 scoreToGrade (444-450, 7 lines)
  🔗 getEmptyProjectScore (455-476, 22 lines)
  🚫 getWeights (481-483, 3 lines)
  🚫 updateWeights (488-496, 9 lines)
  🚫 getThresholds (501-503, 3 lines)
  🚫 updateThresholds (508-513, 6 lines)
  🔗 validateThresholds (518-540, 23 lines)

src/utils/quality-scorer.ts
  🚫 constructor (95-99, 5 lines)
  🔗 validateAndSetWeights (104-130, 27 lines)
  🔗 handleLogisticEdgeCases (137-147, 11 lines)
  🔗 computeLogisticScore (156-169, 14 lines)
  🔗 logisticScore (180-200, 21 lines)
  🔗 invertedLogisticScore (210-233, 24 lines)
  🔗 getQualityWeights (238-250, 13 lines)
  🚫 getDefaultWeights (255-262, 8 lines)
  🚫 withWeights (267-269, 3 lines)
  🚫 calculateProjectScore (271-330, 60 lines)
  🔗 calculateComplexityScore (332-363, 32 lines)
  🔗 getComplexityRatio (368-373, 6 lines)
  🔗 calculateMaintainabilityScore (375-410, 36 lines)
  🔗 getMaintainabilityRatio (415-420, 6 lines)
  🔗 calculateSizeScore (422-453, 32 lines)
  🔗 getSizeRatio (458-463, 6 lines)
  🔗 calculateCodeQualityScore (465-504, 40 lines)
  🔗 scoreToGrade (506-512, 7 lines)
  🔗 countHighRiskFunctions (514-527, 14 lines)
  🔗 getTopProblematicFunctions (529-582, 54 lines)

src/utils/refactoring-health-engine.ts
  🚫 constructor (40-45, 6 lines)
  🔗 evaluateChangeset (50-83, 34 lines)
  🔗 calculateHealthAssessment (88-131, 44 lines)
  🔗 calculateImprovementMetrics (136-193, 58 lines)
  🔗 calculateFunctionExplosionScore (199-238, 40 lines)
  🔗 isGenuineImprovement (244-296, 53 lines)
  🔗 calculateImprovementGrade (301-326, 26 lines)
  🔗 evaluateFunctionRisk (331-379, 49 lines)
  🔗 calculateRiskLevel (384-389, 6 lines)
  🔗 calculateRiskDistribution (394-407, 14 lines)
  🔗 calculateOverallScore (412-420, 9 lines)
  🔗 calculateOverallGrade (425-431, 7 lines)
  🔗 calculateQualityBreakdown (436-474, 39 lines)
  🔗 getProjectStatistics (479-510, 32 lines)
  🔗 calculateMedian (515-519, 5 lines)
  🔗 calculatePercentile (524-528, 5 lines)
  🔗 calculateComplexityDistribution (533-557, 25 lines)
  🔗 calculateSizeDistribution (562-586, 25 lines)
  🔗 createEmptyMetricStatistics (592-612, 21 lines)
  🔗 getFunctionsFromSnapshot (617-619, 3 lines)
  🔗 createEmptyHealthAssessment (624-639, 16 lines)
  🚫 createChangeset (644-673, 30 lines)
  🚫 saveChangeset (678-680, 3 lines)
  🚫 getChangesetsBySession (685-687, 3 lines)
  🚫 constructor (694-694, 1 lines)
  🚫 trackRefactoringOperation (696-711, 16 lines)
  🚫 getRelatedFunctions (713-739, 27 lines)
  🔗 calculateChangesetMetrics (741-777, 37 lines)

src/utils/refactoring-utils.ts
  🚫 parsePattern (12-23, 12 lines)
  🚫 formatPatternName (28-39, 12 lines)
  🚫 getSeverityDisplay (54-57, 4 lines)
  🚫 getSeverityDisplaySimple (62-65, 4 lines)
  🚫 groupOpportunitiesByPattern (70-84, 15 lines)
  🚫 getRiskLevelDisplay (89-98, 10 lines)
  🚫 getPriorityDisplay (103-111, 9 lines)
  🚫 getSeverityIcon (116-125, 10 lines)

src/utils/refactoring-validation.ts
  🚫 constructor (32-35, 4 lines)
  🔗 validateRefactoring (40-72, 33 lines)
  🚫 quickValidate (77-98, 22 lines)
  🚫 displayValidationResults (103-130, 28 lines)
  🔗 generateReasons (135-200, 66 lines)
  🔗 getRecommendation (205-223, 19 lines)
  🔗 getGradeColor (228-243, 16 lines)
  🔗 getRecommendationColor (248-259, 12 lines)
  🚫 createRefactoringValidator (265-267, 3 lines)

src/utils/snapshot-manager.ts
  🚫 constructor (103-112, 10 lines)
  🔗 createSnapshot (117-165, 49 lines)
  🚫 createBeforeSnapshot (170-202, 33 lines)
  🚫 createAfterSnapshot (207-242, 36 lines)
  🚫 cleanupOldSnapshots (247-297, 51 lines)
  🔗 generateSnapshotId (302-306, 5 lines)
  🔗 generateDefaultLabel (311-316, 6 lines)
  🔗 getGitInfo (321-362, 42 lines)
  🔗 getCurrentAnalysisMetadata (367-456, 90 lines)
  🔗 calculateConfigHash (461-482, 22 lines)

src/utils/snapshot-resolver.ts
  🚫 resolveSnapshotId (20-62, 43 lines)
  🔗 resolveGitCommitReference (68-95, 28 lines)
  🔗 isValidGitReference (100-129, 30 lines)
  🔗 findSnapshotByGitCommit (134-140, 7 lines)
  🔗 createSnapshotForGitCommit (145-200, 56 lines)
  🔗 shouldExcludeDirectory (209-211, 3 lines)
  🔗 isTypeScriptFile (216-218, 3 lines)
  🚫 processDirectoryEntry (223-238, 16 lines)
  🔗 findTypeScriptFiles (243-256, 14 lines)

src/utils/statistical-evaluator.ts
  🚫 calculateProjectStatistics (18-82, 65 lines)
  🔗 calculateMetricStatistics (87-137, 51 lines)
  🔗 calculatePercentile (142-161, 20 lines)
  🔗 evaluateThreshold (166-198, 33 lines)
  🔗 calculateStatisticalThreshold (203-228, 26 lines)
  🔗 getBaseline (233-247, 15 lines)
  🔗 getPercentileValue (252-285, 34 lines)
  🚫 determineViolationLevel (290-311, 22 lines)
  🔗 validateStatisticalRequirements (313-328, 16 lines)
  🔗 checkThresholdViolations (330-351, 22 lines)
  🚫 createThresholdViolation (356-392, 37 lines)
  🔗 createEmptyMetricStatistics (397-417, 21 lines)

src/utils/streaming-stats.ts
  🚫 constructor (68-75, 8 lines)
  🔗 push (83-106, 24 lines)
  🔗 zScore (154-164, 11 lines)
  🔗 detectAnomaly (172-212, 41 lines)
  🔗 getSummary (217-227, 11 lines)
  🔗 reset (232-238, 7 lines)
  🚫 clone (243-251, 9 lines)
  🚫 merge (258-289, 32 lines)
  🚫 export (294-303, 10 lines)
  🚫 import (308-318, 11 lines)
  🚫 constructor (329-336, 8 lines)
  🚫 updateMetric (341-346, 6 lines)
  🚫 getMetricStats (351-353, 3 lines)
  🚫 detectAnomalies (358-369, 12 lines)
  🚫 getAllSummaries (374-382, 9 lines)
  🚫 getMetricNames (387-389, 3 lines)
  🚫 resetAll (394-398, 5 lines)
  🔗 clear (403-405, 3 lines)

src/utils/structural-analyzer.ts
  🚫 constructor (104-119, 16 lines)
  🚫 buildGraph (124-164, 41 lines)
  🔗 analyzeFunction (169-187, 19 lines)
  🚫 detectAnomalies (192-249, 58 lines)
  🔗 getGraphStatistics (254-294, 41 lines)
  🔗 addEdge (299-310, 12 lines)
  🔗 calculateCentralityMeasures (315-319, 5 lines)
  🔗 calculateBetweennessCentrality (324-399, 76 lines)
  🔗 calculateClosenessCentrality (404-430, 27 lines)
  🔗 calculatePageRank (435-502, 68 lines)
  🔗 bfsShortestPaths (508-535, 28 lines)
  🔗 calculateClustering (541-574, 34 lines)
  🔗 calculateCallDepth (579-601, 23 lines)
  🔗 calculateAveragePathLength (606-622, 17 lines)
  🔗 calculateDistributionStats (627-635, 9 lines)
  🔗 reset (640-645, 6 lines)

src/utils/system-checker.ts
  🚫 constructor (25-27, 3 lines)
  🔗 checkNodeVersion (29-37, 9 lines)
  🚫 checkGitAvailable (39-47, 9 lines)
  🚫 checkTypescriptProject (49-51, 3 lines)
  🔗 checkFileSystemAccess (53-64, 12 lines)
  🚫 checkMemoryAvailable (66-80, 15 lines)
  🚫 checkWritePermissions (82-92, 11 lines)
  🔗 getRequirements (94-129, 36 lines)
  🔗 checkSystem (131-171, 41 lines)
  🚫 basicSystemCheck (177-190, 14 lines)
  🚫 reportSystemCheck (192-237, 46 lines)

src/utils/threshold-evaluator.ts
  🚫 constructor (23-25, 3 lines)
  🚫 evaluateFunctionThresholds (30-47, 18 lines)
  🔗 createMetricMappings (52-159, 108 lines)
  🔗 evaluateSingleMetric (164-198, 35 lines)
  🔗 evaluateMultiLevelThreshold (203-237, 35 lines)
  🚫 assessFunctionRisk (242-284, 43 lines)
  🔗 calculateRiskScore (289-330, 42 lines)
  🔗 determineRiskLevel (335-364, 30 lines)
  🚫 evaluateRiskConditions (369-408, 40 lines)
  🚫 generateProjectRiskAssessment (413-446, 34 lines)
  🔗 evaluateInvertedMultiLevelThreshold (451-500, 50 lines)
  🔗 getDefaultRiskAssessmentConfig (505-513, 9 lines)
  🔗 getDefaultQualityThresholds (518-551, 34 lines)
  🚫 mergeWithDefaults (556-595, 40 lines)

src/workers/analysis-worker.ts
  🔗 processFile (30-51, 22 lines)
  🔗 createSuccessResponse (56-72, 17 lines)
  🔗 createErrorResponse (77-89, 13 lines)
  🚫 processFiles (91-119, 29 lines)

⚠️  Unused Export Functions (Review Required)

src/analyzers/call-graph-analyzer.ts
  📦 constructor (50-63, 14 lines)
  📦 analyzeFile (68-111, 44 lines)
  📦 extractCallsFromFunction (116-146, 31 lines)
  📦 analyzeCallExpression (151-218, 68 lines)
  📦 analyzePropertyAccess (223-251, 29 lines)
  📦 getCallContext (256-283, 28 lines)
  📦 isExternalFunction (288-303, 16 lines)
  📦 createDetectedCall (308-326, 19 lines)
  📦 createCallEdge (331-389, 59 lines)
  📦 getAllFunctionNodes (394-404, 11 lines)
  📦 isFunctionDeclaration (409-415, 7 lines)
  📦 getCacheStats (420-422, 3 lines)
  📦 clearCache (427-429, 3 lines)

src/analyzers/dependency-metrics.ts
  📦 calculateMetrics (51-113, 63 lines)
  📦 generateStats (118-154, 37 lines)
  📦 buildCallGraphs (159-186, 28 lines)
  📦 preAggregateCallCounts (191-211, 21 lines)
  📦 calculateMaxCallChainMemoized (216-235, 20 lines)
  📦 calculateMaxCallChainRecursive (240-266, 27 lines)
  📦 calculateCycleLength (271-307, 37 lines)
  📦 isRecursiveFunction (312-343, 32 lines)
  📦 calculateDepthFromEntries (348-376, 29 lines)

src/analyzers/entry-point-detector.ts
  📦 detectEntryPoints (47-63, 17 lines)
  📦 getEntryPointReasons (68-106, 39 lines)
  📦 isTestFile (111-113, 3 lines)
  📦 isCliFile (118-120, 3 lines)
  📦 isMainFile (125-127, 3 lines)
  📦 detectAdvancedEntryPoints (140-207, 68 lines)
  📦 extractFunctionId (212-240, 29 lines)

src/analyzers/naming-quality-analyzer.ts
  📦 analyze (160-191, 32 lines)
  📦 parseToAST (196-219, 24 lines)
  📦 createParseableSource (224-238, 15 lines)
  📦 checkBasicNamingRules (247-313, 67 lines)
  📦 checkSemanticAppropriateness (321-388, 68 lines)
  📦 checkConsistency (394-443, 50 lines)
  📦 checkRedundancy (450-487, 38 lines)
  📦 getReturnTypeFromAST (492-513, 22 lines)
  📦 calculateConfidence (518-544, 27 lines)
  📦 isCamelCase (550-553, 4 lines)
  📦 toCamelCase (555-559, 5 lines)
  📦 hasGenericSuffixes (561-564, 4 lines)
  📦 startsWithActionVerb (566-569, 4 lines)
  📦 hasValidBooleanPrefix (571-574, 4 lines)
  📦 extractFirstWord (576-580, 5 lines)
  📦 isReturnTypeBoolean (582-586, 5 lines)
  📦 isValidConstructorName (588-590, 3 lines)
  📦 hasGoodVerbNounBalance (592-601, 10 lines)
  📦 splitCamelCase (603-610, 8 lines)
  📦 suggestActionVerbs (612-619, 8 lines)
  📦 suggestBooleanNames (621-628, 8 lines)
  📦 extractVerbPatterns (630-639, 10 lines)
  📦 followsVerbPattern (641-644, 4 lines)
  📦 extractNamingConventions (646-654, 9 lines)
  📦 followsConventions (656-664, 9 lines)
  📦 hasRedundantClassPrefix (666-670, 5 lines)
  📦 removeClassPrefix (672-678, 7 lines)
  📦 extractFilename (680-684, 5 lines)
  📦 hasRedundantFilePrefix (686-690, 5 lines)
  📦 removeFilePrefix (692-699, 8 lines)

src/analyzers/reachability-analyzer.ts
  📦 analyzeReachability (29-76, 48 lines)
  📦 getDeadCodeInfo (81-145, 65 lines)
  📦 buildCallGraph (150-165, 16 lines)
  📦 buildReverseCallGraph (170-183, 14 lines)
  📦 traverse (188-205, 18 lines)
  📦 isTestFunction (210-223, 14 lines)
  📦 isOnlyCalledFromTests (228-242, 15 lines)
  📦 findCircularDependencies (247-293, 47 lines)

src/analyzers/type-safety-analyzer.ts
  📦 analyze (49-80, 32 lines)
  📦 checkAnyTypeUsage (86-139, 54 lines)
  📦 checkTypeAnnotationCompleteness (145-213, 69 lines)
  📦 checkTypeSpecificity (219-276, 58 lines)
  📦 checkReturnTypeExplicitness (282-325, 44 lines)
  📦 calculateMetrics (330-342, 13 lines)
  📦 isAnyType (348-353, 6 lines)
  📦 isGenericType (355-369, 15 lines)
  📦 findUnsafeTypes (371-393, 23 lines)
  📦 looksLikeVoidFunction (395-409, 15 lines)
  📦 isComplexFunction (411-417, 7 lines)
  📦 isImplicitReturnType (422-435, 14 lines)
  📦 hasImplicitReturnTypeFromAST (440-473, 34 lines)
  📦 countAnyTypes (475-489, 15 lines)
  📦 countUntypedParameters (491-495, 5 lines)
  📦 usesGenericObjectTypes (497-508, 12 lines)
  📦 analyzeBatch (513-564, 52 lines)
  📦 parseToAST (569-617, 49 lines)
  📦 createParseableSource (622-638, 17 lines)

src/analyzers/typescript-analyzer.ts
  📦 constructor (45-77, 33 lines)
  📦 analyzeFile (82-178, 97 lines)
  📦 analyzeFilesBatch (183-215, 33 lines)
  📦 analyzeFilesStream (221-248, 28 lines)
  📦 extractFunctionInfo (250-324, 75 lines)
  📦 extractMethodInfo (326-414, 89 lines)
  📦 extractConstructorInfo (416-497, 82 lines)
  📦 extractFunctionNodeFromVariable (502-509, 8 lines)
  📦 extractFunctionMetadata (514-547, 34 lines)
  📦 createVariableFunctionInfo (552-608, 57 lines)
  📦 extractVariableFunctions (610-635, 26 lines)
  📦 getFunctionSignature (637-647, 11 lines)
  📦 getMethodSignature (649-660, 12 lines)
  📦 getArrowFunctionSignature (662-674, 13 lines)
  📦 getConstructorSignature (676-684, 9 lines)
  📦 extractParameters (690-715, 26 lines)
  📦 extractFunctionParameters (717-719, 3 lines)
  📦 extractMethodParameters (721-723, 3 lines)
  📦 extractArrowFunctionParameters (725-729, 5 lines)
  📦 extractFunctionReturnType (731-748, 18 lines)
  📦 extractMethodReturnType (750-767, 18 lines)
  📦 extractArrowFunctionReturnType (769-788, 20 lines)
  📦 extractConstructorParameters (790-792, 3 lines)
  📦 simplifyType (794-802, 9 lines)
  📦 extractPromiseType (804-807, 4 lines)
  📦 calculateFileHash (809-811, 3 lines)
  📦 calculateASTHash (813-821, 9 lines)
  📦 calculateSignatureHash (823-825, 3 lines)
  📦 generatePhysicalId (830-832, 3 lines)
  📦 generateSemanticId (838-855, 18 lines)
  📦 generateContentId (861-865, 5 lines)
  📦 extractContextPath (870-893, 24 lines)
  📦 extractModifiers (898-929, 32 lines)
  📦 determineFunctionType (934-960, 27 lines)
  📦 calculateNestingLevel (965-985, 21 lines)
  📦 extractConstructorContextPath (990-1001, 12 lines)
  📦 calculateConstructorNestingLevel (1006-1009, 4 lines)
  📦 manageMemory (1014-1023, 10 lines)
  📦 cleanup (1028-1036, 9 lines)
  📦 getMemoryStats (1041-1046, 6 lines)
  📦 getCacheStats (1051-1053, 3 lines)
  📦 analyzeFileWithCallGraph (1059-1096, 38 lines)
  📦 analyzeFilesBatchWithCallGraph (1101-1132, 32 lines)
  📦 getCallGraphStats (1137-1139, 3 lines)
  📦 clearCallGraphCache (1144-1146, 3 lines)

src/config/preset-manager.ts
  📦 constructor (25-28, 4 lines)
  📦 applyPreset (33-101, 69 lines)
  📦 getPreset (106-116, 11 lines)
  📦 listAllPresets (121-124, 4 lines)
  📦 saveCustomPreset (129-146, 18 lines)
  📦 deleteCustomPreset (151-161, 11 lines)
  📦 compareWithPreset (166-174, 9 lines)
  📦 suggestPresets (179-196, 18 lines)
  📦 loadCustomPresets (202-209, 8 lines)
  📦 saveCustomPresets (211-215, 5 lines)
  📦 createConfigBackup (217-226, 10 lines)
  📦 calculateChanges (228-245, 18 lines)
  📦 compareConfigObjects (247-286, 40 lines)
  📦 assessChangeImpact (288-309, 22 lines)
  📦 describeChange (311-321, 11 lines)
  📦 validateConfiguration (323-368, 46 lines)
  📦 mergeConfigurations (370-384, 15 lines)
  📦 deepMerge (386-407, 22 lines)
  📦 saveConfiguration (409-415, 7 lines)
  📦 analyzeProjectStructure (417-514, 98 lines)
  📦 calculatePresetScore (516-551, 36 lines)

src/config/presets.ts
  📦 getPreset (502-504, 3 lines)
  📦 getPresetsByCategory (509-511, 3 lines)
  📦 getPresetsByContext (516-523, 8 lines)
  📦 listPresets (528-540, 13 lines)

src/config/refactoring-thresholds.ts
  📦 loadThresholds (79-114, 36 lines)
  📦 validateAndMergeThresholds (119-187, 69 lines)
  📦 getComplexityReductionThreshold (192-195, 4 lines)
  📦 getFunctionExplosionThreshold (200-208, 9 lines)
  📦 getMaintainabilityImprovementThreshold (213-216, 4 lines)
  📦 getRiskImprovementThreshold (221-224, 4 lines)
  📦 clearCache (229-232, 4 lines)

src/config/thresholds-simple.ts
  📦 constructor (42-44, 3 lines)
  📦 getQualityThresholds (49-51, 3 lines)
  📦 updateThresholds (56-59, 4 lines)
  📦 validateThresholds (64-88, 25 lines)
  📦 mergeWithDefaults (93-109, 17 lines)
  📦 parseQualityThresholdConfig (115-136, 22 lines)

src/core/analyzer.ts
  📦 constructor (9-14, 6 lines)
  📦 analyzeFile (19-78, 60 lines)
  📦 analyzeFiles (83-105, 23 lines)
  📦 getAnalyzerForFile (110-127, 18 lines)
  📦 isFileSupported (132-134, 3 lines)
  📦 getSupportedExtensions (139-141, 3 lines)
  📦 validateFunction (146-203, 58 lines)
  📦 generateFunctionId (208-219, 12 lines)
  📦 simpleHash (221-229, 9 lines)
  📦 compareFunctions (234-275, 42 lines)

src/core/config.ts
  📦 load (57-75, 19 lines)
  📦 getDefaults (77-79, 3 lines)
  📦 loadLightweight (85-107, 23 lines)
  📦 validateAndMergeConfig (109-123, 15 lines)
  📦 mergeArrayConfigs (125-141, 17 lines)
  📦 mergeStorageConfig (143-157, 15 lines)
  📦 mergeMetricsConfig (159-190, 32 lines)
  📦 mergeGitConfig (192-202, 11 lines)
  📦 mergeSimilarityConfig (204-212, 9 lines)
  📦 resolvePath (217-226, 10 lines)
  📦 getConfigPath (231-234, 4 lines)
  📦 getThresholdManager (239-244, 6 lines)
  📦 getQualityThresholds (249-251, 3 lines)
  📦 updateQualityThresholds (256-269, 14 lines)
  📦 clearCache (274-279, 6 lines)
  📦 generateScanConfigHash (285-294, 10 lines)
  📦 getCurrentScanConfigHash (299-302, 4 lines)
  📦 mergeThresholdsConfig (304-308, 5 lines)
  📦 mergeAssessmentConfig (310-314, 5 lines)
  📦 mergeProjectContextConfig (316-320, 5 lines)
  📦 mergeFuncqcThresholdsConfig (322-336, 15 lines)
  📦 validateThresholds (338-368, 31 lines)
  📦 validateMultiLevelThreshold (370-380, 11 lines)
  📦 validateThresholdValue (382-416, 35 lines)
  📦 validateAssessmentConfig (418-454, 37 lines)
  📦 validateProjectContext (456-489, 34 lines)

src/core/environment.ts
  📦 createAppEnvironment (10-40, 31 lines)
  📦 createCommandEnvironment (46-59, 14 lines)
  📦 destroyAppEnvironment (64-66, 3 lines)

src/core/realtime-quality-gate.ts
  📦 constructor (115-138, 24 lines)
  📦 evaluateCode (147-189, 43 lines)
  📦 updateBaseline (196-211, 16 lines)
  📦 evaluateAllFunctions (220-304, 85 lines)
  📦 getBaseline (309-314, 6 lines)
  📦 generateImprovementInstruction (322-365, 44 lines)
  📦 calculateQualityScore (370-384, 15 lines)
  📦 performAnalysis (389-469, 81 lines)
  📦 detectViolations (474-485, 12 lines)
  📦 detectAdaptiveViolations (490-521, 32 lines)
  📦 detectStaticViolations (526-556, 31 lines)
  📦 generateMetricSuggestion (561-582, 22 lines)
  📦 calculateStructuralScore (587-633, 47 lines)
  📦 updateMetricBaseline (638-663, 26 lines)
  📦 performMultiAnalysis (668-836, 169 lines)
  📦 initializeBaseline (841-853, 13 lines)

src/core/risk-assessor.ts
  📦 assessProject (23-98, 76 lines)
  📦 assessFunction (103-131, 29 lines)
  📦 getViolations (136-152, 17 lines)
  📦 getContextualThresholds (157-186, 30 lines)
  📦 adjustForExperienceLevel (191-203, 13 lines)
  📦 adjustForProjectType (208-220, 13 lines)
  📦 adjustForCodebaseSize (225-237, 13 lines)
  📦 scaleNumericThresholds (242-264, 23 lines)
  📦 createAssessmentSummary (269-323, 55 lines)

src/core/storage-manager.ts
  📦 initialize (16-36, 21 lines)
  📦 createStorage (38-53, 16 lines)
  📦 getStorage (59-64, 6 lines)
  📦 getOrInitialize (69-74, 6 lines)
  📦 close (79-84, 6 lines)

src/core/storage-provider.ts
  📦 constructor (14-14, 1 lines)
  📦 getInstance (16-21, 6 lines)
  📦 getStorage (28-52, 25 lines)
  📦 initializeStorage (54-77, 24 lines)
  📦 loadConfig (79-82, 4 lines)
  📦 close (87-92, 6 lines)
  📦 reset (97-104, 8 lines)
  📦 getStorage (110-116, 7 lines)

src/data/metric-explanations.ts
  📦 getMetricExplanation (579-581, 3 lines)
  📦 getConceptExplanation (583-585, 3 lines)
  📦 getAllMetrics (587-589, 3 lines)
  📦 getMetricsByCategory (591-593, 3 lines)
  📦 getAllConcepts (595-597, 3 lines)
  📦 searchMetrics (599-607, 9 lines)

src/metrics/quality-calculator.ts
  📦 calculate (8-67, 60 lines)
  📦 isFunctionLike (69-77, 9 lines)
  📦 calculateFromText (79-102, 24 lines)
  📦 calculateLinesOfCode (104-124, 21 lines)
  📦 calculateTotalLines (126-128, 3 lines)
  📦 isBasicControlFlowNode (130-142, 13 lines)
  📦 isLogicalBinaryExpression (144-154, 11 lines)
  📦 shouldIncrementComplexity (156-158, 3 lines)
  📦 calculateCyclomaticComplexity (160-172, 13 lines)
  📦 calculateCognitiveComplexity (174-214, 41 lines)
  📦 getCognitiveComplexityInfo (216-267, 52 lines)
  📦 getSwitchComplexityInfo (273-278, 6 lines)
  📦 getCaseClauseComplexityInfo (285-296, 12 lines)
  📦 caseHasFallThrough (301-324, 24 lines)
  📦 hasIntentionalFallThroughComment (330-376, 47 lines)
  📦 getNextCaseNode (381-395, 15 lines)
  📦 getCommentsInRange (400-415, 16 lines)
  📦 endsWithControlFlow (420-438, 19 lines)
  📦 blockEndsWithControlFlow (443-463, 21 lines)
  📦 calculateMaxNestingLevel (465-486, 22 lines)
  📦 isNestingNode (488-501, 14 lines)
  📦 countReturnStatements (503-515, 13 lines)
  📦 countBranches (517-529, 13 lines)
  📦 countLoops (531-549, 19 lines)
  📦 countTryCatch (551-563, 13 lines)
  📦 countAsyncAwait (565-577, 13 lines)
  📦 countCallbacks (579-595, 17 lines)
  📦 calculateCommentLines (597-615, 19 lines)
  📦 calculateHalsteadVolume (617-624, 8 lines)
  📦 collectHalsteadMetrics (626-646, 21 lines)
  📦 processOperators (648-672, 25 lines)
  📦 processBinaryOperator (674-681, 8 lines)
  📦 processUnaryOperator (683-692, 10 lines)
  📦 addOperator (694-697, 4 lines)
  📦 getUnaryOperator (699-716, 18 lines)
  📦 processOperands (718-736, 19 lines)
  📦 calculateHalsteadDifficulty (738-748, 11 lines)
  📦 calculateMaintainabilityIndex (750-774, 25 lines)

src/migrations/001_initial_schema.ts
  📦 up (11-32, 22 lines)
  📦 down (34-83, 50 lines)

src/migrations/002_refactoring_health_engine.ts
  📦 up (18-83, 66 lines)
  📦 down (85-112, 28 lines)

src/migrations/helpers.ts
  📦 preserveTableData (16-69, 54 lines)
  📦 preserveMultipleTables (79-100, 22 lines)
  📦 checkTableExists (105-121, 17 lines)
  📦 checkColumnExists (126-147, 22 lines)
  📦 cleanupOldBackups (158-171, 14 lines)
  📦 listBackupTables (284-302, 19 lines)
  📦 safeDropTable (307-322, 16 lines)
  📦 getMigrationStats (327-353, 27 lines)

src/migrations/kysely-migration-manager.ts
  📦 constructor (253-267, 15 lines)
  📦 migrateToLatest (272-294, 23 lines)
  📦 migrateDown (299-316, 18 lines)
  📦 getMigrationStatus (321-346, 26 lines)
  📦 createMigration (351-384, 34 lines)
  📦 preserveTableData (390-435, 46 lines)
  📦 listBackupTables (440-473, 34 lines)
  📦 cleanupOldBackups (478-502, 25 lines)
  📦 handleMigrationError (507-540, 34 lines)
  📦 detectMissingMigrationFiles (545-569, 25 lines)
  📦 diagnoseMigrationHealth (574-673, 100 lines)
  📦 detectOrphanedMigrationFiles (678-701, 24 lines)
  📦 detectSyntaxErrors (706-730, 25 lines)
  📦 detectUncommittedMigrationFiles (735-749, 15 lines)
  📦 archiveMigration (754-779, 26 lines)
  📦 ensureMigrationArchiveTable (784-798, 15 lines)
  📦 calculateChecksum (803-817, 15 lines)
  📦 generateUUID (822-828, 7 lines)
  📦 restoreMissingMigrations (833-939, 107 lines)
  📦 archivePendingMigrations (945-963, 19 lines)
  📦 getKyselyInstance (968-970, 3 lines)
  📦 close (975-983, 9 lines)

src/refactoring/refactoring-analyzer.ts
  📦 constructor (22-25, 4 lines)
  📦 analyzeProject (30-58, 29 lines)
  📦 detectOpportunities (63-82, 20 lines)
  📦 assessImpact (87-104, 18 lines)
  📦 generatePlan (109-121, 13 lines)
  📦 applyAnalysisFilters (127-149, 23 lines)
  📦 detectPatternOpportunity (151-174, 24 lines)
  📦 getPatternDetector (176-193, 18 lines)
  📦 identifyQualityHotSpots (195-220, 26 lines)
  📦 identifyQualityIssues (222-275, 54 lines)
  📦 calculateRiskScore (277-303, 27 lines)
  📦 analyzeTrends (305-308, 4 lines)
  📦 generateProjectSummary (310-332, 23 lines)
  📦 identifyPriorityAreas (334-352, 19 lines)
  📦 generateRecommendations (354-378, 25 lines)
  📦 estimateEffortForPattern (380-390, 11 lines)
  📦 describeBenefitForPattern (392-402, 11 lines)
  📦 prioritizeOpportunities (404-416, 13 lines)
  📦 groupIntoPhases (418-446, 29 lines)
  📦 analyzeDependencies (448-453, 6 lines)
  📦 calculateTotalEffort (455-460, 6 lines)
  📦 assessOverallRisk (462-469, 8 lines)
  📦 summarizeExpectedBenefits (471-479, 9 lines)
  📦 assessRefactoringRisk (481-489, 9 lines)
  📦 assessRefactoringBenefit (491-501, 11 lines)
  📦 estimateRefactoringEffort (503-517, 15 lines)
  📦 calculateRecommendation (519-528, 10 lines)

src/refactoring/session-manager-simple.ts
  📦 constructor (29-37, 9 lines)
  📦 createSession (42-97, 56 lines)
  📦 getActiveSessions (102-127, 26 lines)
  📦 getAllSessions (132-134, 3 lines)
  📦 getSession (140-142, 3 lines)
  📦 mapRowToRefactoringSession (148-177, 30 lines)
  📦 safeJsonParse (182-189, 8 lines)
  📦 addFunctionsToSession (194-225, 32 lines)
  📦 updateFunctionStatus (230-248, 19 lines)
  📦 getSessionSummary (253-319, 67 lines)
  📦 completeSession (324-346, 23 lines)
  📦 cancelSession (351-373, 23 lines)
  📦 getSessionFunctions (378-395, 18 lines)
  📦 updateSession (400-451, 52 lines)
  📦 associateSnapshotWithSession (456-477, 22 lines)
  📦 getSessionSnapshots (482-490, 9 lines)
  📦 linkOpportunitiesToSession (495-508, 14 lines)
  📦 listSessions (513-538, 26 lines)
  📦 getSessionOpportunities (543-559, 17 lines)

src/services/embedding-service.ts
  📦 constructor (57-79, 23 lines)
  📦 initialize (84-86, 3 lines)
  📦 isInitialized (91-93, 3 lines)
  📦 getModelInfo (98-104, 7 lines)
  📦 getANNInfo (109-116, 8 lines)
  📦 buildANNIndex (121-145, 25 lines)
  📦 addToANNIndex (150-174, 25 lines)
  📦 semanticSearch (179-225, 47 lines)
  📦 exactSemanticSearch (230-272, 43 lines)
  📦 isANNIndexReady (277-279, 3 lines)
  📦 getIndexStatistics (284-294, 11 lines)
  📦 rebuildANNIndex (299-315, 17 lines)
  📦 generateEmbedding (320-337, 18 lines)
  📦 batchGenerateEmbeddings (342-368, 27 lines)
  📦 generateFunctionEmbeddings (373-409, 37 lines)
  📦 prepareFunctionText (414-464, 51 lines)
  📦 extractJsDocExamples (469-477, 9 lines)
  📦 cleanJsDoc (482-498, 17 lines)
  📦 cosineSimilarity (503-520, 18 lines)
  📦 euclideanDistance (525-537, 13 lines)

src/services/embedding/enhanced-service.ts
  📦 constructor (39-42, 4 lines)
  📦 initialize (47-58, 12 lines)
  📦 cleanupResources (63-76, 14 lines)
  📦 initializeComponents (81-91, 11 lines)
  📦 generateFunctionEmbeddings (96-146, 51 lines)
  📦 buildIndex (151-166, 16 lines)
  📦 addToIndex (171-187, 17 lines)
  📦 convertToEmbeddingVectors (192-203, 12 lines)
  📦 semanticSearch (208-262, 55 lines)
  📦 isReady (267-273, 7 lines)
  📦 getStats (278-292, 15 lines)
  📦 prepareFunctionText (297-340, 44 lines)
  📦 formatParameterInfo (345-354, 10 lines)
  📦 extractJsDocExamples (359-367, 9 lines)
  📦 cleanJsDoc (372-388, 17 lines)
  📦 exactSemanticSearch (393-423, 31 lines)
  📦 cosineSimilarity (428-445, 18 lines)
  📦 estimateTokenCount (450-453, 4 lines)
  📦 updateSearchStats (458-465, 8 lines)

src/services/embedding/openai-client.ts
  📦 constructor (36-43, 8 lines)
  📦 initializeClient (45-52, 8 lines)
  📦 initialize (57-59, 3 lines)
  📦 generateEmbedding (64-110, 47 lines)
  📦 batchGenerateEmbeddings (115-158, 44 lines)
  📦 processBatchChunk (163-202, 40 lines)
  📦 getModelInfo (207-214, 8 lines)
  📦 isInitialized (219-221, 3 lines)
  📦 getStats (226-235, 10 lines)
  📦 isNonRetryableError (240-250, 11 lines)
  📦 calculateBackoffDelay (255-258, 4 lines)
  📦 sleep (263-265, 3 lines)
  📦 updateResponseTime (270-275, 6 lines)

src/services/embedding/vector-store.ts
  📦 constructor (52-65, 14 lines)
  📦 initializeIndex (70-80, 11 lines)
  📦 buildIndex (85-115, 31 lines)
  📦 addEmbeddings (120-148, 29 lines)
  📦 removeEmbeddings (153-173, 21 lines)
  📦 search (178-205, 28 lines)
  📦 isReady (210-212, 3 lines)
  📦 getStats (217-229, 13 lines)
  📦 clear (234-242, 9 lines)
  📦 getEmbeddings (247-258, 12 lines)
  📦 shouldFlushBuffer (263-265, 3 lines)
  📦 scheduleBufferFlush (270-278, 9 lines)
  📦 flushBuffer (283-324, 42 lines)
  📦 clearBuffer (329-337, 9 lines)

src/services/health-analysis-service.ts
  📦 analyzeFunction (54-96, 43 lines)
  📦 generateRefactoringPlan (103-127, 25 lines)
  📦 calculateRefactoringPriority (135-171, 37 lines)
  📦 estimateComplexityReduction (178-206, 29 lines)
  📦 generateSmartPrompt (214-239, 26 lines)
  📦 extractPatternsFromSuggestions (248-267, 20 lines)
  📦 extractTargetPatterns (276-313, 38 lines)

src/services/local-similarity-service.ts
  📦 constructor (185-195, 11 lines)
  📦 indexDocuments (200-264, 65 lines)
  📦 searchSimilar (269-371, 103 lines)
  📦 getMetrics (376-407, 32 lines)
  📦 clear (412-415, 4 lines)

src/similarity/advanced-similarity-detector.ts
  📦 constructor (54-58, 5 lines)
  📦 createConfig (60-72, 13 lines)
  📦 calculateOptimalCacheSize (74-88, 15 lines)
  📦 isAvailable (90-92, 3 lines)
  📦 detect (94-112, 19 lines)
  📦 detectAdvancedMode (117-129, 13 lines)
  📦 executeDetectionAlgorithms (134-153, 20 lines)
  📦 detectTwoStageMode (158-181, 24 lines)
  📦 extractCandidates (186-244, 59 lines)
  📦 applyHierarchicalLSH (249-298, 50 lines)
  📦 stratifiedSample (303-334, 32 lines)
  📦 postFilterCandidates (339-354, 16 lines)
  📦 mergeResults (359-394, 36 lines)
  📦 createPairKey (396-401, 6 lines)
  📦 detectFastMode (406-450, 45 lines)
  📦 parseDetectionOptions (452-461, 10 lines)
  📦 filterValidFunctions (463-481, 19 lines)
  📦 initializeProject (483-527, 45 lines)
  📦 ensureFilesLoaded (529-551, 23 lines)
  📦 fileExists (553-561, 9 lines)
  📦 generateFingerprints (563-633, 71 lines)
  📦 generateFunctionFingerprint (635-679, 45 lines)
  📦 generateFingerprintFromSource (684-708, 25 lines)
  📦 tokenizeSourceCode (710-716, 7 lines)
  📦 canonicalizeTokens (718-740, 23 lines)
  📦 findFunctionNode (742-760, 19 lines)
  📦 canonicalizeAST (765-778, 14 lines)
  📦 canonicalizeNode (780-808, 29 lines)
  📦 shouldSkipNode (810-812, 3 lines)
  📦 canonicalizeIdentifier (814-836, 23 lines)
  📦 isFunctionContext (838-844, 7 lines)
  📦 canonicalizeLiteral (846-856, 11 lines)
  📦 computeMerkleHash (861-871, 11 lines)
  📦 computeNodeMerkleHash (873-880, 8 lines)
  📦 hash64 (882-896, 15 lines)
  📦 mixHashes (898-910, 13 lines)
  📦 generateSimHashFingerprints (915-943, 29 lines)
  📦 computeSimHash (948-971, 24 lines)
  📦 computeSignatureHash (976-979, 4 lines)
  📦 extractStructuralSignature (981-1011, 31 lines)
  📦 detectExactMatches (1016-1046, 31 lines)
  📦 detectNearDuplicates (1051-1110, 60 lines)
  📦 applyHierarchicalLSHToLargeBucket (1115-1144, 30 lines)
  📦 getLSHBucketKey (1146-1150, 5 lines)
  📦 logLSHBucketDistribution (1155-1186, 32 lines)
  📦 checkSmallBucketCandidates (1191-1233, 43 lines)
  📦 computeSimHashSimilarity (1235-1248, 14 lines)
  📦 computeHammingDistance (1250-1261, 12 lines)
  📦 hammingDistance (1263-1273, 11 lines)
  📦 isValidSimilarity (1278-1319, 42 lines)
  📦 areNamesSimilar (1321-1340, 20 lines)
  📦 editDistance (1342-1362, 21 lines)
  📦 detectStructuralSimilarities (1367-1399, 33 lines)
  📦 computeStructuralSimilarity (1401-1418, 18 lines)
  📦 jaccardSimilarity (1420-1428, 9 lines)
  📦 shouldIncludeGroup (1433-1443, 11 lines)
  📦 shouldIncludePair (1445-1456, 12 lines)
  📦 createSimilarityResult (1458-1486, 29 lines)
  📦 computeAverageComplexity (1488-1496, 9 lines)
  📦 computeAverageLines (1498-1504, 7 lines)
  📦 deduplicateResults (1506-1514, 9 lines)
  📦 mergeOverlappingGroups (1519-1542, 24 lines)
  📦 findConnectedGroups (1544-1557, 14 lines)
  📦 mergeGroupsIntoOne (1559-1594, 36 lines)

src/similarity/ann-similarity-detector.ts
  📦 constructor (24-30, 7 lines)
  📦 isAvailable (32-40, 9 lines)
  📦 detect (42-103, 62 lines)
  📦 loadEmbeddings (105-126, 22 lines)
  📦 parseDetectionOptions (128-134, 7 lines)
  📦 passesFilters (136-154, 19 lines)
  📦 getPairKey (156-158, 3 lines)
  📦 createSimilarityResult (160-179, 20 lines)
  📦 createSimilarFunction (181-190, 10 lines)
  📦 groupSimilarFunctions (192-266, 75 lines)

src/similarity/ast-canonicalizer.ts
  📦 canonicalize (22-33, 12 lines)
  📦 canonicalizeSourceCode (38-65, 28 lines)
  📦 findArrowFunctions (67-77, 11 lines)
  📦 canonicalizeNode (79-101, 23 lines)
  📦 canonicalizeBlock (103-116, 14 lines)
  📦 canonicalizeIfStatement (118-142, 25 lines)
  📦 canonicalizeLoop (144-150, 7 lines)
  📦 canonicalizeReturnStatement (152-161, 10 lines)
  📦 canonicalizeVariableStatement (163-166, 4 lines)
  📦 canonicalizeExpressionStatement (168-172, 5 lines)
  📦 canonicalizeTryStatement (174-183, 10 lines)
  📦 canonicalizeSwitchStatement (185-188, 4 lines)
  📦 canonicalizeCallExpression (190-201, 12 lines)
  📦 canonicalizeBinaryExpression (203-212, 10 lines)
  📦 canonicalizePropertyAccess (214-223, 10 lines)
  📦 canonicalizeIdentifier (225-278, 54 lines)
  📦 isStatementNode (280-294, 15 lines)
  📦 isExpressionNode (296-303, 8 lines)
  📦 isLiteralNode (305-315, 11 lines)
  📦 isKeywordNode (317-333, 17 lines)
  📦 canonicalizeStatementNode (335-359, 25 lines)
  📦 canonicalizeExpressionNode (361-374, 14 lines)
  📦 canonicalizeLiteralNode (376-393, 18 lines)
  📦 canonicalizeKeywordNode (395-413, 19 lines)
  📦 canonicalizeChildren (415-421, 7 lines)
  📦 calculateASTSimilarity (427-435, 9 lines)

src/similarity/ast-similarity-detector.ts
  📦 constructor (24-46, 23 lines)
  📦 dispose (48-52, 5 lines)
  📦 detect (54-63, 10 lines)
  📦 isAvailable (65-67, 3 lines)
  📦 parseDetectionOptions (69-75, 7 lines)
  📦 filterValidFunctions (77-82, 6 lines)
  📦 detectPairwiseSimilarities (84-112, 29 lines)
  📦 shouldSkipComparison (114-128, 15 lines)
  📦 createSimilarityResult (130-149, 20 lines)
  📦 calculateSimilarity (151-189, 39 lines)
  📦 calculateASTStructureSimilarity (191-211, 21 lines)
  📦 calculateTextBasedSimilarity (213-222, 10 lines)
  📦 normalizeCode (224-265, 42 lines)
  📦 calculateSignatureSimilarity (267-293, 27 lines)
  📦 calculateMetricsSimilarity (295-327, 33 lines)
  📦 calculateParameterSimilarity (329-343, 15 lines)
  📦 calculateReturnTypeSimilarity (345-353, 9 lines)
  📦 levenshteinDistance (355-376, 22 lines)
  📦 getPairKey (378-380, 3 lines)
  📦 createSimilarFunction (382-391, 10 lines)
  📦 groupSimilarFunctions (393-398, 6 lines)
  📦 buildSimilarityGraph (400-418, 19 lines)
  📦 ensureNodeExists (420-424, 5 lines)
  📦 findConnectedComponents (426-440, 15 lines)
  📦 exploreComponent (442-466, 25 lines)
  📦 createGroupedResults (468-490, 23 lines)
  📦 getFunctionsInComponent (492-499, 8 lines)
  📦 calculateAverageSimilarity (501-514, 14 lines)
  📦 findFirstMatchingResult (516-524, 9 lines)

src/similarity/hash-similarity-detector.ts
  📦 isAvailable (18-20, 3 lines)
  📦 detect (22-33, 12 lines)
  📦 parseDetectionOptions (35-41, 7 lines)
  📦 filterValidFunctions (43-48, 6 lines)
  📦 detectHashSimilarities (50-90, 41 lines)
  📦 groupByHash (92-153, 62 lines)
  📦 createHashResults (155-182, 28 lines)
  📦 createSimilarityResult (184-206, 23 lines)
  📦 createSimilarFunction (208-217, 10 lines)
  📦 groupSimilarFunctions (219-271, 53 lines)

src/similarity/similarity-manager.ts
  📦 constructor (19-34, 16 lines)
  📦 registerDetector (36-38, 3 lines)
  📦 detectSimilarities (40-53, 14 lines)
  📦 runSpecificDetectors (55-92, 38 lines)
  📦 runPriorityBasedDetection (94-136, 43 lines)
  📦 applyConsensus (138-159, 22 lines)
  📦 majorityConsensus (161-203, 43 lines)
  📦 intersectionConsensus (205-247, 43 lines)
  📦 weightedConsensus (249-295, 47 lines)
  📦 getPairKey (297-302, 6 lines)
  📦 getAvailableDetectors (304-306, 3 lines)

src/storage/bulk-insert-utils.ts
  📦 prepareBulkInsertData (33-55, 23 lines)
  📦 generateBulkInsertSQL (130-149, 20 lines)
  📦 splitIntoBatches (154-162, 9 lines)
  📦 calculateOptimalBatchSize (171-179, 9 lines)

src/storage/pglite-adapter.ts
  📦 constructor (53-60, 8 lines)
  📦 constructor (113-132, 20 lines)
  📦 validateDbPath (137-181, 45 lines)
  📦 validateWindowsFilePath (187-261, 75 lines)
  📦 shouldCheckDatabaseDirectory (267-282, 16 lines)
  📦 init (284-332, 49 lines)
  📦 close (334-360, 27 lines)
  📦 saveSnapshot (366-396, 31 lines)
  📦 getSnapshots (398-423, 26 lines)
  📦 getSnapshot (425-440, 16 lines)
  📦 deleteSnapshot (442-452, 11 lines)
  📦 getLatestSnapshot (457-476, 20 lines)
  📦 getLastConfigHash (482-499, 18 lines)
  📦 getFunctions (505-632, 128 lines)
  📦 getFunctionsBySnapshot (634-661, 28 lines)
  📦 queryFunctions (663-679, 17 lines)
  📦 diffSnapshots (685-710, 26 lines)
  📦 validateAndLoadSnapshots (712-721, 10 lines)
  📦 loadSnapshotFunctions (723-727, 5 lines)
  📦 calculateSnapshotDifferences (729-742, 14 lines)
  📦 categorizeChangedFunctions (744-766, 23 lines)
  📦 findRemovedFunctions (768-778, 11 lines)
  📦 calculateFunctionChanges (780-830, 51 lines)
  📦 calculateChangeImpact (832-857, 26 lines)
  📦 calculateDiffStatistics (859-877, 19 lines)
  📦 aggregateMetrics (879-897, 19 lines)
  📦 saveFunctionDescription (903-944, 42 lines)
  📦 getFunctionDescription (946-992, 47 lines)
  📦 getFunctionsNeedingDescriptions (994-1049, 56 lines)
  📦 searchFunctionsByDescription (1051-1109, 59 lines)
  📦 getFunctionsWithDescriptions (1111-1158, 48 lines)
  📦 getFunctionsWithoutDescriptions (1160-1206, 47 lines)
  📦 saveEmbedding (1212-1239, 28 lines)
  📦 getEmbedding (1241-1262, 22 lines)
  📦 searchByEmbedding (1264-1341, 78 lines)
  📦 bulkSaveEmbeddings (1343-1353, 11 lines)
  📦 getFunctionsWithoutEmbeddings (1355-1396, 42 lines)
  📦 getFunctionsWithEmbeddings (1398-1438, 41 lines)
  📦 getFunction (1440-1474, 35 lines)
  📦 getFunctionsBatch (1476-1526, 51 lines)
  📦 getEmbeddingStats (1528-1556, 29 lines)
  📦 saveANNIndex (1565-1616, 52 lines)
  📦 getCurrentANNIndex (1621-1676, 56 lines)
  📦 getAllANNIndexes (1681-1724, 44 lines)
  📦 deleteANNIndex (1729-1737, 9 lines)
  📦 getANNIndexStats (1742-1809, 68 lines)
  📦 saveLineage (1819-1851, 33 lines)
  📦 getLineage (1853-1889, 37 lines)
  📦 getLineages (1891-1946, 56 lines)
  📦 getLineagesWithFunctionFilter (1948-2036, 89 lines)
  📦 updateLineageStatus (2038-2055, 18 lines)
  📦 formatPostgresArrayLiteral (2057-2067, 11 lines)
  📦 updateLineage (2069-2105, 37 lines)
  📦 deleteLineage (2107-2118, 12 lines)
  📦 getLineagesByCommit (2120-2135, 16 lines)
  📦 getFunctionLineageHistory (2137-2154, 18 lines)
  📦 pruneDraftLineages (2156-2177, 22 lines)
  📦 mapRowToLineage (2179-2243, 65 lines)
  📦 cleanup (2245-2247, 3 lines)
  📦 backup (2249-2251, 3 lines)
  📦 restore (2253-2255, 3 lines)
  📦 executeInTransaction (2265-2285, 21 lines)
  📦 beginTransaction (2290-2292, 3 lines)
  📦 commitTransaction (2297-2299, 3 lines)
  📦 rollbackTransaction (2304-2306, 3 lines)
  📦 getFunctionHistory (2316-2414, 99 lines)
  📦 bulkDeleteFunctionsBySnapshot (2423-2444, 22 lines)
  📦 bulkUpdateQualityMetrics (2449-2495, 47 lines)
  📦 ensureInitialized (2505-2510, 6 lines)
  📦 createSchema (2512-2515, 4 lines)
  📦 initializeWithMigrations (2525-2528, 4 lines)
  📦 createTablesDirectly (2534-2558, 25 lines)
  📦 generateSnapshotId (2560-2562, 3 lines)
  📦 createSnapshotRecord (2564-2593, 30 lines)
  📦 saveFunctions (2598-2642, 45 lines)
  📦 insertFunctionRecord (2647-2693, 47 lines)
  📦 insertFunctionParameters (2695-2716, 22 lines)
  📦 insertFunctionMetrics (2718-2755, 38 lines)
  📦 saveSingleFunction (2757-2761, 5 lines)
  📦 saveFunctionsBatch (2763-2784, 22 lines)
  📦 saveFunctionsBulk (2789-2902, 114 lines)
  📦 getFunctionParameters (2904-2910, 7 lines)
  📦 getFunctionParametersBatch (2912-2936, 25 lines)
  📦 mapRowToSnapshotInfo (2938-2960, 23 lines)
  📦 mapRowToFunctionInfo (2962-2977, 16 lines)
  📦 createBaseFunctionInfo (2979-3012, 34 lines)
  📦 mapParameters (3014-3025, 12 lines)
  📦 addOptionalProperties (3027-3048, 22 lines)
  📦 addMetricsIfAvailable (3050-3070, 21 lines)
  📦 getOptionalMetrics (3072-3083, 12 lines)
  📦 calculateSnapshotMetadata (3085-3128, 44 lines)
  📦 getGitCommit (3131-3140, 10 lines)
  📦 getGitBranch (3142-3151, 10 lines)
  📦 getGitTag (3153-3163, 11 lines)
  📦 saveNamingEvaluation (3169-3212, 44 lines)
  📦 getNamingEvaluation (3214-3263, 50 lines)
  📦 getFunctionsNeedingEvaluation (3265-3309, 45 lines)
  📦 getFunctionsWithEvaluations (3311-3383, 73 lines)
  📦 updateEvaluationRevisionStatus (3385-3396, 12 lines)
  📦 batchSaveEvaluations (3398-3466, 69 lines)
  📦 getEvaluationStatistics (3468-3539, 72 lines)
  📦 safeJsonParse (3544-3551, 8 lines)
  📦 getAllRefactoringSessions (3557-3584, 28 lines)
  📦 mapRowToRefactoringSession (3591-3620, 30 lines)
  📦 saveRefactoringChangeset (3630-3670, 41 lines)
  📦 getRefactoringChangeset (3675-3689, 15 lines)
  📦 getRefactoringChangesetsBySession (3694-3705, 12 lines)
  📦 updateRefactoringChangeset (3710-3749, 40 lines)
  📦 getFunctionsBySnapshotId (3754-3756, 3 lines)
  📦 getLineagesByFunctionId (3761-3770, 10 lines)
  📦 updateRefactoringSession (3775-3814, 40 lines)
  📦 getRefactoringSessions (3819-3843, 25 lines)
  📦 mapRowToRefactoringChangeset (3848-3886, 39 lines)
  📦 saveRefactoringSession (3891-3919, 29 lines)
  📦 getRefactoringSession (3924-3948, 25 lines)
  📦 insertCallEdges (3957-4004, 48 lines)
  📦 getCallEdgesByCaller (4009-4024, 16 lines)
  📦 getCallEdgesByCallee (4029-4044, 16 lines)
  📦 getCallEdges (4049-4111, 63 lines)
  📦 getCallEdgesBySnapshot (4116-4133, 18 lines)
  📦 deleteCallEdgesByCaller (4138-4152, 15 lines)
  📦 deleteCallEdges (4157-4177, 21 lines)
  📦 mapRowToCallEdge (4182-4199, 18 lines)
  📦 getDb (4206-4208, 3 lines)

src/types/common.ts
  📦 isStringArray (188-190, 3 lines)
  📦 isRecord (192-194, 3 lines)
  📦 isConfigValue (196-206, 11 lines)

src/types/reader.ts
  📦 map (14-16, 3 lines)
  📦 mapAsync (21-25, 5 lines)
  📦 flatMap (30-34, 5 lines)
  📦 flatMapAsync (39-43, 5 lines)
  📦 pure (48-50, 3 lines)
  📦 pureAsync (55-57, 3 lines)
  📦 ask (62-64, 3 lines)
  📦 askAsync (69-71, 3 lines)

src/use-cases/confirmation-handler.ts
  📦 confirm (25-60, 36 lines)
  📦 createVectorizeConfirmationMessage (65-83, 19 lines)
  📦 estimateEmbeddingCost (88-104, 17 lines)

src/use-cases/output-formatter.ts
  📦 constructor (26-26, 1 lines)
  📦 format (31-37, 7 lines)
  📦 formatJSON (42-54, 13 lines)
  📦 formatConsole (59-78, 20 lines)
  📦 formatVectorizeResult (83-114, 32 lines)
  📦 formatStatusResult (119-157, 39 lines)
  📦 formatIndexResult (162-176, 15 lines)
  📦 formatBenchmarkResult (181-193, 13 lines)
  📦 formatIndexStatsResult (198-214, 17 lines)
  📦 formatErrors (219-230, 12 lines)
  📦 colorize (235-256, 22 lines)
  📦 formatBytes (261-269, 9 lines)

src/use-cases/vectorize-options.ts
  📦 validate (98-112, 15 lines)
  📦 parseIndexConfig (117-147, 31 lines)
  📦 requiresApiKey (152-154, 3 lines)
  📦 isDangerousOperation (159-161, 3 lines)
  📦 getOperationDescription (166-180, 15 lines)

src/use-cases/vectorize-use-case.ts
  📦 constructor (71-71, 1 lines)
  📦 execute (76-111, 36 lines)
  📦 vectorizeFunctions (116-168, 53 lines)
  📦 getStatus (173-198, 26 lines)
  📦 rebuildIndex (203-210, 8 lines)
  📦 benchmarkIndex (215-224, 10 lines)
  📦 getIndexStats (229-232, 4 lines)
  📦 getFunctionsToVectorize (237-260, 24 lines)
  📦 getModelDimension (265-272, 8 lines)
  📦 getOperationType (277-283, 7 lines)
  📦 getEmptyDataForOperation (288-339, 52 lines)

src/utils/analysis-cache.ts
  📦 constructor (34-62, 29 lines)
  📦 get (67-88, 22 lines)
  📦 set (93-111, 19 lines)
  📦 clear (116-119, 4 lines)
  📦 getStats (124-135, 12 lines)
  📦 preload (140-153, 14 lines)
  📦 cleanup (158-162, 5 lines)
  📦 generateCacheKey (164-166, 3 lines)
  📦 calculateFileHash (168-177, 10 lines)
  📦 isValidCacheEntry (179-195, 17 lines)
  📦 initializePersistentCache (197-209, 13 lines)
  📦 loadFromPersistentCache (211-225, 15 lines)
  📦 saveToPersistentCache (227-236, 10 lines)
  📦 clearPersistentCache (238-252, 15 lines)
  📦 cleanupPersistentCache (254-271, 18 lines)

src/utils/ast-utils.ts
  📦 findFunctionNode (63-81, 19 lines)

src/utils/batch-processor.ts
  📦 batchArray (12-22, 11 lines)
  📦 processFunctionsBatch (27-41, 15 lines)
  📦 processWithProgress (46-67, 22 lines)
  📦 getOptimalBatchSize (72-86, 15 lines)
  📦 calculateFunctionBatchSize (91-99, 9 lines)
  📦 processWithTransaction (118-141, 24 lines)

src/utils/changeset-evaluator.ts
  📦 constructor (163-183, 21 lines)
  📦 evaluateChangeset (188-270, 83 lines)
  📦 evaluateOperation (275-355, 81 lines)
  📦 calculateComprehensiveScores (360-402, 43 lines)
  📦 calculateComplexityScore (407-420, 14 lines)
  📦 calculateRiskScore (425-433, 9 lines)
  📦 calculateMaintainabilityScore (438-446, 9 lines)
  📦 calculateCodeQualityScore (451-463, 13 lines)
  📦 calculateExplosionPenalty (468-471, 4 lines)
  📦 determineGenuineImprovement (476-505, 30 lines)
  📦 calculateOverallGrade (510-522, 13 lines)
  📦 identifyCriticalIssues (527-555, 29 lines)
  📦 generateWarnings (560-588, 29 lines)
  📦 generateRecommendations (593-629, 37 lines)
  📦 createMockHealthAssessment (634-655, 22 lines)
  📦 createErrorEvaluationResult (660-723, 64 lines)

src/utils/cli-utils.ts
  📦 constructor (20-23, 4 lines)
  📦 error (29-35, 7 lines)
  📦 warn (37-43, 7 lines)
  📦 info (45-51, 7 lines)
  📦 success (53-59, 7 lines)
  📦 debug (61-67, 7 lines)
  📦 log (69-72, 4 lines)
  📦 formatDetails (74-79, 6 lines)
  📦 constructor (88-92, 5 lines)
  📦 update (94-110, 17 lines)
  📦 finish (112-117, 6 lines)
  📦 formatTable (123-196, 74 lines)
  📦 prompt (201-215, 15 lines)
  📦 confirm (220-241, 22 lines)
  📦 select (246-279, 34 lines)
  📦 displayBanner (284-297, 14 lines)
  📦 formatHelp (302-313, 12 lines)
  📦 exitWithError (318-321, 4 lines)
  📦 setupErrorHandling (326-354, 29 lines)

src/utils/error-handler.ts
  📦 constructor (52-61, 10 lines)
  📦 createError (63-83, 21 lines)
  📦 getErrorInfo (85-156, 72 lines)
  📦 handleError (158-173, 16 lines)
  📦 logError (175-185, 11 lines)
  📦 suggestRecovery (187-194, 8 lines)
  📦 getExitCode (196-225, 30 lines)
  📦 withRetry (227-258, 32 lines)
  📦 wrapAsync (260-278, 19 lines)

src/utils/explosion-detector.ts
  📦 constructor (124-134, 11 lines)
  📦 detectExplosion (139-188, 50 lines)
  📦 detectChangesetExplosion (193-243, 51 lines)
  📦 calculateExplosionMetrics (248-271, 24 lines)
  📦 calculateExplosionScore (276-312, 37 lines)
  📦 calculateChangesetExplosionScore (317-346, 30 lines)
  📦 classifyExplosionSeverity (351-357, 7 lines)
  📦 generateExplosionReasons (362-401, 40 lines)
  📦 generateChangesetExplosionReasons (406-443, 38 lines)
  📦 generateRecommendations (448-496, 49 lines)
  📦 generateChangesetRecommendations (501-532, 32 lines)
  📦 createNoExplosionResult (537-556, 20 lines)
  📦 getFunctionInfo (561-570, 10 lines)

src/utils/file-utils.ts
  📦 fileExists (10-17, 8 lines)
  📦 ensureDir (22-37, 16 lines)
  📦 findFiles (49-67, 19 lines)
  📦 shouldExclude (114-124, 11 lines)
  📦 formatFileSize (129-140, 12 lines)
  📦 formatDuration (145-162, 18 lines)
  📦 debounce (167-174, 8 lines)
  📦 throttle (179-190, 12 lines)
  📦 sleep (195-197, 3 lines)
  📦 retry (202-231, 30 lines)
  📦 percentage (236-239, 4 lines)
  📦 clamp (244-246, 3 lines)
  📦 simpleHash (251-259, 9 lines)
  📦 deepMerge (264-277, 14 lines)
  📦 parseNumericCondition (282-302, 21 lines)
  📦 calculateFileHash (359-368, 10 lines)

src/utils/format-helpers.ts
  📦 isJsonOutput (16-18, 3 lines)
  📦 createStableJsonOutput (24-49, 26 lines)
  📦 sanitizeForJson (54-72, 19 lines)
  📦 safeLog (78-86, 9 lines)
  📦 outputJson (91-101, 11 lines)
  📦 conditionalLog (106-110, 5 lines)
  📦 errorLog (115-117, 3 lines)

src/utils/format-utils.ts
  📦 formatFileSize (4-15, 12 lines)
  📦 formatDuration (20-37, 18 lines)
  📦 formatPercentage (42-46, 5 lines)
  📦 truncateString (51-54, 4 lines)
  📦 pluralize (59-62, 4 lines)
  📦 formatFilePath (67-72, 6 lines)
  📦 formatLineRange (77-82, 6 lines)

src/utils/graph-algorithms.ts
  📦 findConnectedComponents (10-34, 25 lines)
  📦 buildItemToGroupsMapping (39-56, 18 lines)

src/utils/hash-winnowing-utility.ts
  📦 winnowHashes (48-76, 29 lines)
  📦 extractKGrams (81-87, 7 lines)

src/utils/lineage-manager.ts
  📦 constructor (31-34, 4 lines)
  📦 trackRefactoringOperation (39-68, 30 lines)
  📦 getRelatedFunctions (73-107, 35 lines)
  📦 calculateChangesetMetrics (112-154, 43 lines)
  📦 mapOperationTypeToLineageKind (159-172, 14 lines)
  📦 calculateOperationConfidence (177-202, 26 lines)
  📦 updateChangesetWithLineage (207-261, 55 lines)
  📦 detectRelationships (267-318, 52 lines)
  📦 analyzeRelationship (323-361, 39 lines)
  📦 handleChangesetError (366-442, 77 lines)
  📦 classifyError (447-542, 96 lines)
  📦 retryChangesetOperation (547-592, 46 lines)

src/utils/parallel-processor.ts
  📦 constructor (37-41, 5 lines)
  📦 processFiles (46-103, 58 lines)
  📦 processFileBatch (108-158, 51 lines)
  📦 splitFilesForWorkers (163-172, 10 lines)
  📦 calculateOptimalFilesPerWorker (177-183, 7 lines)
  📦 shouldUseParallelProcessing (188-192, 5 lines)
  📦 getRecommendedConfig (197-206, 10 lines)

src/utils/quality-scorer-v16.ts
  📦 constructor (31-39, 9 lines)
  📦 calculateFunctionScore (44-87, 44 lines)
  📦 calculateProjectScore (92-135, 44 lines)
  📦 calculateBaseScores (140-184, 45 lines)
  📦 convertEvaluationToScore (189-204, 16 lines)
  📦 calculateComponentAverages (209-238, 30 lines)
  📦 calculateProjectStatistics (243-285, 43 lines)
  📦 getTopProblematicFunctions (290-348, 59 lines)
  📦 generateRecommendations (353-439, 87 lines)
  📦 scoreToGrade (444-450, 7 lines)
  📦 getEmptyProjectScore (455-476, 22 lines)
  📦 getWeights (481-483, 3 lines)
  📦 updateWeights (488-496, 9 lines)
  📦 getThresholds (501-503, 3 lines)
  📦 updateThresholds (508-513, 6 lines)
  📦 validateThresholds (518-540, 23 lines)

src/utils/quality-scorer.ts
  📦 constructor (95-99, 5 lines)
  📦 validateAndSetWeights (104-130, 27 lines)
  📦 handleLogisticEdgeCases (137-147, 11 lines)
  📦 computeLogisticScore (156-169, 14 lines)
  📦 logisticScore (180-200, 21 lines)
  📦 invertedLogisticScore (210-233, 24 lines)
  📦 getQualityWeights (238-250, 13 lines)
  📦 getDefaultWeights (255-262, 8 lines)
  📦 withWeights (267-269, 3 lines)
  📦 calculateProjectScore (271-330, 60 lines)
  📦 calculateComplexityScore (332-363, 32 lines)
  📦 getComplexityRatio (368-373, 6 lines)
  📦 calculateMaintainabilityScore (375-410, 36 lines)
  📦 getMaintainabilityRatio (415-420, 6 lines)
  📦 calculateSizeScore (422-453, 32 lines)
  📦 getSizeRatio (458-463, 6 lines)
  📦 calculateCodeQualityScore (465-504, 40 lines)
  📦 scoreToGrade (506-512, 7 lines)
  📦 countHighRiskFunctions (514-527, 14 lines)
  📦 getTopProblematicFunctions (529-582, 54 lines)

src/utils/refactoring-health-engine.ts
  📦 constructor (40-45, 6 lines)
  📦 evaluateChangeset (50-83, 34 lines)
  📦 calculateHealthAssessment (88-131, 44 lines)
  📦 calculateImprovementMetrics (136-193, 58 lines)
  📦 calculateFunctionExplosionScore (199-238, 40 lines)
  📦 isGenuineImprovement (244-296, 53 lines)
  📦 calculateImprovementGrade (301-326, 26 lines)
  📦 evaluateFunctionRisk (331-379, 49 lines)
  📦 calculateRiskLevel (384-389, 6 lines)
  📦 calculateRiskDistribution (394-407, 14 lines)
  📦 calculateOverallScore (412-420, 9 lines)
  📦 calculateOverallGrade (425-431, 7 lines)
  📦 calculateQualityBreakdown (436-474, 39 lines)
  📦 getProjectStatistics (479-510, 32 lines)
  📦 calculateMedian (515-519, 5 lines)
  📦 calculatePercentile (524-528, 5 lines)
  📦 calculateComplexityDistribution (533-557, 25 lines)
  📦 calculateSizeDistribution (562-586, 25 lines)
  📦 createEmptyMetricStatistics (592-612, 21 lines)
  📦 getFunctionsFromSnapshot (617-619, 3 lines)
  📦 createEmptyHealthAssessment (624-639, 16 lines)
  📦 createChangeset (644-673, 30 lines)
  📦 saveChangeset (678-680, 3 lines)
  📦 getChangesetsBySession (685-687, 3 lines)
  📦 constructor (694-694, 1 lines)
  📦 trackRefactoringOperation (696-711, 16 lines)
  📦 getRelatedFunctions (713-739, 27 lines)
  📦 calculateChangesetMetrics (741-777, 37 lines)

src/utils/refactoring-utils.ts
  📦 parsePattern (12-23, 12 lines)
  📦 formatPatternName (28-39, 12 lines)
  📦 getSeverityDisplay (54-57, 4 lines)
  📦 getSeverityDisplaySimple (62-65, 4 lines)
  📦 groupOpportunitiesByPattern (70-84, 15 lines)
  📦 getRiskLevelDisplay (89-98, 10 lines)
  📦 getPriorityDisplay (103-111, 9 lines)
  📦 getSeverityIcon (116-125, 10 lines)

src/utils/refactoring-validation.ts
  📦 constructor (32-35, 4 lines)
  📦 validateRefactoring (40-72, 33 lines)
  📦 quickValidate (77-98, 22 lines)
  📦 displayValidationResults (103-130, 28 lines)
  📦 generateReasons (135-200, 66 lines)
  📦 getRecommendation (205-223, 19 lines)
  📦 getGradeColor (228-243, 16 lines)
  📦 getRecommendationColor (248-259, 12 lines)
  📦 createRefactoringValidator (265-267, 3 lines)

src/utils/snapshot-manager.ts
  📦 constructor (103-112, 10 lines)
  📦 createSnapshot (117-165, 49 lines)
  📦 createBeforeSnapshot (170-202, 33 lines)
  📦 createAfterSnapshot (207-242, 36 lines)
  📦 cleanupOldSnapshots (247-297, 51 lines)
  📦 generateSnapshotId (302-306, 5 lines)
  📦 generateDefaultLabel (311-316, 6 lines)
  📦 getGitInfo (321-362, 42 lines)
  📦 getCurrentAnalysisMetadata (367-456, 90 lines)
  📦 calculateConfigHash (461-482, 22 lines)

src/utils/snapshot-resolver.ts
  📦 resolveSnapshotId (20-62, 43 lines)

src/utils/statistical-evaluator.ts
  📦 calculateProjectStatistics (18-82, 65 lines)
  📦 calculateMetricStatistics (87-137, 51 lines)
  📦 calculatePercentile (142-161, 20 lines)
  📦 evaluateThreshold (166-198, 33 lines)
  📦 calculateStatisticalThreshold (203-228, 26 lines)
  📦 getBaseline (233-247, 15 lines)
  📦 getPercentileValue (252-285, 34 lines)
  📦 determineViolationLevel (290-311, 22 lines)
  📦 validateStatisticalRequirements (313-328, 16 lines)
  📦 checkThresholdViolations (330-351, 22 lines)
  📦 createThresholdViolation (356-392, 37 lines)
  📦 createEmptyMetricStatistics (397-417, 21 lines)

src/utils/streaming-stats.ts
  📦 constructor (68-75, 8 lines)
  📦 push (83-106, 24 lines)
  📦 zScore (154-164, 11 lines)
  📦 detectAnomaly (172-212, 41 lines)
  📦 getSummary (217-227, 11 lines)
  📦 reset (232-238, 7 lines)
  📦 clone (243-251, 9 lines)
  📦 merge (258-289, 32 lines)
  📦 export (294-303, 10 lines)
  📦 import (308-318, 11 lines)
  📦 constructor (329-336, 8 lines)
  📦 updateMetric (341-346, 6 lines)
  📦 getMetricStats (351-353, 3 lines)
  📦 detectAnomalies (358-369, 12 lines)
  📦 getAllSummaries (374-382, 9 lines)
  📦 getMetricNames (387-389, 3 lines)
  📦 resetAll (394-398, 5 lines)
  📦 clear (403-405, 3 lines)

src/utils/structural-analyzer.ts
  📦 constructor (104-119, 16 lines)
  📦 buildGraph (124-164, 41 lines)
  📦 analyzeFunction (169-187, 19 lines)
  📦 detectAnomalies (192-249, 58 lines)
  📦 getGraphStatistics (254-294, 41 lines)
  📦 addEdge (299-310, 12 lines)
  📦 calculateCentralityMeasures (315-319, 5 lines)
  📦 calculateBetweennessCentrality (324-399, 76 lines)
  📦 calculateClosenessCentrality (404-430, 27 lines)
  📦 calculatePageRank (435-502, 68 lines)
  📦 bfsShortestPaths (508-535, 28 lines)
  📦 calculateClustering (541-574, 34 lines)
  📦 calculateCallDepth (579-601, 23 lines)
  📦 calculateAveragePathLength (606-622, 17 lines)
  📦 calculateDistributionStats (627-635, 9 lines)
  📦 reset (640-645, 6 lines)

src/utils/system-checker.ts
  📦 constructor (25-27, 3 lines)
  📦 checkNodeVersion (29-37, 9 lines)
  📦 checkGitAvailable (39-47, 9 lines)
  📦 checkTypescriptProject (49-51, 3 lines)
  📦 checkFileSystemAccess (53-64, 12 lines)
  📦 checkMemoryAvailable (66-80, 15 lines)
  📦 checkWritePermissions (82-92, 11 lines)
  📦 getRequirements (94-129, 36 lines)
  📦 checkSystem (131-171, 41 lines)
  📦 basicSystemCheck (177-190, 14 lines)
  📦 reportSystemCheck (192-237, 46 lines)

src/utils/threshold-evaluator.ts
  📦 constructor (23-25, 3 lines)
  📦 evaluateFunctionThresholds (30-47, 18 lines)
  📦 createMetricMappings (52-159, 108 lines)
  📦 evaluateSingleMetric (164-198, 35 lines)
  📦 evaluateMultiLevelThreshold (203-237, 35 lines)
  📦 assessFunctionRisk (242-284, 43 lines)
  📦 calculateRiskScore (289-330, 42 lines)
  📦 determineRiskLevel (335-364, 30 lines)
  📦 evaluateRiskConditions (369-408, 40 lines)
  📦 generateProjectRiskAssessment (413-446, 34 lines)
  📦 evaluateInvertedMultiLevelThreshold (451-500, 50 lines)
  📦 getDefaultRiskAssessmentConfig (505-513, 9 lines)
  📦 getDefaultQualityThresholds (518-551, 34 lines)
  📦 mergeWithDefaults (556-595, 40 lines)

💡 These export functions are not used internally but may be public APIs.
💡 Review manually to determine if they should be removed or kept.

──────────────────────────────────────────────────
Total dead code: 1154 functions, 25170 lines
Unused exports: 1063 functions, 23925 lines
💡 Tip: Use --exclude-small to hide small functions
